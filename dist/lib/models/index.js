/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
/**
 * Defines values for TransportProtocol.
 * Possible values include: 'Udp', 'Tcp', 'All'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: TransportProtocol =
 * <TransportProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var TransportProtocol;
(function (TransportProtocol) {
    TransportProtocol["Udp"] = "Udp";
    TransportProtocol["Tcp"] = "Tcp";
    TransportProtocol["All"] = "All";
})(TransportProtocol || (TransportProtocol = {}));
/**
 * Defines values for IPAllocationMethod.
 * Possible values include: 'Static', 'Dynamic'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IPAllocationMethod =
 * <IPAllocationMethod>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var IPAllocationMethod;
(function (IPAllocationMethod) {
    IPAllocationMethod["Static"] = "Static";
    IPAllocationMethod["Dynamic"] = "Dynamic";
})(IPAllocationMethod || (IPAllocationMethod = {}));
/**
 * Defines values for IPVersion.
 * Possible values include: 'IPv4', 'IPv6'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IPVersion = <IPVersion>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var IPVersion;
(function (IPVersion) {
    IPVersion["IPv4"] = "IPv4";
    IPVersion["IPv6"] = "IPv6";
})(IPVersion || (IPVersion = {}));
/**
 * Defines values for SecurityRuleProtocol.
 * Possible values include: 'Tcp', 'Udp', '*'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SecurityRuleProtocol =
 * <SecurityRuleProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var SecurityRuleProtocol;
(function (SecurityRuleProtocol) {
    SecurityRuleProtocol["Tcp"] = "Tcp";
    SecurityRuleProtocol["Udp"] = "Udp";
    SecurityRuleProtocol["Asterisk"] = "*";
})(SecurityRuleProtocol || (SecurityRuleProtocol = {}));
/**
 * Defines values for SecurityRuleAccess.
 * Possible values include: 'Allow', 'Deny'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SecurityRuleAccess =
 * <SecurityRuleAccess>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var SecurityRuleAccess;
(function (SecurityRuleAccess) {
    SecurityRuleAccess["Allow"] = "Allow";
    SecurityRuleAccess["Deny"] = "Deny";
})(SecurityRuleAccess || (SecurityRuleAccess = {}));
/**
 * Defines values for SecurityRuleDirection.
 * Possible values include: 'Inbound', 'Outbound'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SecurityRuleDirection =
 * <SecurityRuleDirection>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var SecurityRuleDirection;
(function (SecurityRuleDirection) {
    SecurityRuleDirection["Inbound"] = "Inbound";
    SecurityRuleDirection["Outbound"] = "Outbound";
})(SecurityRuleDirection || (SecurityRuleDirection = {}));
/**
 * Defines values for RouteNextHopType.
 * Possible values include: 'VirtualNetworkGateway', 'VnetLocal', 'Internet',
 * 'VirtualAppliance', 'None'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: RouteNextHopType =
 * <RouteNextHopType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var RouteNextHopType;
(function (RouteNextHopType) {
    RouteNextHopType["VirtualNetworkGateway"] = "VirtualNetworkGateway";
    RouteNextHopType["VnetLocal"] = "VnetLocal";
    RouteNextHopType["Internet"] = "Internet";
    RouteNextHopType["VirtualAppliance"] = "VirtualAppliance";
    RouteNextHopType["None"] = "None";
})(RouteNextHopType || (RouteNextHopType = {}));
/**
 * Defines values for PublicIPAddressSkuName.
 * Possible values include: 'Basic', 'Standard'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PublicIPAddressSkuName =
 * <PublicIPAddressSkuName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var PublicIPAddressSkuName;
(function (PublicIPAddressSkuName) {
    PublicIPAddressSkuName["Basic"] = "Basic";
    PublicIPAddressSkuName["Standard"] = "Standard";
})(PublicIPAddressSkuName || (PublicIPAddressSkuName = {}));
/**
 * Defines values for ApplicationGatewayProtocol.
 * Possible values include: 'Http', 'Https'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayProtocol =
 * <ApplicationGatewayProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayProtocol;
(function (ApplicationGatewayProtocol) {
    ApplicationGatewayProtocol["Http"] = "Http";
    ApplicationGatewayProtocol["Https"] = "Https";
})(ApplicationGatewayProtocol || (ApplicationGatewayProtocol = {}));
/**
 * Defines values for ApplicationGatewayCookieBasedAffinity.
 * Possible values include: 'Enabled', 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayCookieBasedAffinity =
 * <ApplicationGatewayCookieBasedAffinity>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayCookieBasedAffinity;
(function (ApplicationGatewayCookieBasedAffinity) {
    ApplicationGatewayCookieBasedAffinity["Enabled"] = "Enabled";
    ApplicationGatewayCookieBasedAffinity["Disabled"] = "Disabled";
})(ApplicationGatewayCookieBasedAffinity || (ApplicationGatewayCookieBasedAffinity = {}));
/**
 * Defines values for ApplicationGatewayBackendHealthServerHealth.
 * Possible values include: 'Unknown', 'Up', 'Down', 'Partial', 'Draining'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayBackendHealthServerHealth =
 * <ApplicationGatewayBackendHealthServerHealth>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayBackendHealthServerHealth;
(function (ApplicationGatewayBackendHealthServerHealth) {
    ApplicationGatewayBackendHealthServerHealth["Unknown"] = "Unknown";
    ApplicationGatewayBackendHealthServerHealth["Up"] = "Up";
    ApplicationGatewayBackendHealthServerHealth["Down"] = "Down";
    ApplicationGatewayBackendHealthServerHealth["Partial"] = "Partial";
    ApplicationGatewayBackendHealthServerHealth["Draining"] = "Draining";
})(ApplicationGatewayBackendHealthServerHealth || (ApplicationGatewayBackendHealthServerHealth = {}));
/**
 * Defines values for ApplicationGatewaySkuName.
 * Possible values include: 'Standard_Small', 'Standard_Medium',
 * 'Standard_Large', 'WAF_Medium', 'WAF_Large'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewaySkuName =
 * <ApplicationGatewaySkuName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewaySkuName;
(function (ApplicationGatewaySkuName) {
    ApplicationGatewaySkuName["StandardSmall"] = "Standard_Small";
    ApplicationGatewaySkuName["StandardMedium"] = "Standard_Medium";
    ApplicationGatewaySkuName["StandardLarge"] = "Standard_Large";
    ApplicationGatewaySkuName["WAFMedium"] = "WAF_Medium";
    ApplicationGatewaySkuName["WAFLarge"] = "WAF_Large";
})(ApplicationGatewaySkuName || (ApplicationGatewaySkuName = {}));
/**
 * Defines values for ApplicationGatewayTier.
 * Possible values include: 'Standard', 'WAF'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayTier =
 * <ApplicationGatewayTier>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayTier;
(function (ApplicationGatewayTier) {
    ApplicationGatewayTier["Standard"] = "Standard";
    ApplicationGatewayTier["WAF"] = "WAF";
})(ApplicationGatewayTier || (ApplicationGatewayTier = {}));
/**
 * Defines values for ApplicationGatewaySslProtocol.
 * Possible values include: 'TLSv1_0', 'TLSv1_1', 'TLSv1_2'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewaySslProtocol =
 * <ApplicationGatewaySslProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewaySslProtocol;
(function (ApplicationGatewaySslProtocol) {
    ApplicationGatewaySslProtocol["TLSv10"] = "TLSv1_0";
    ApplicationGatewaySslProtocol["TLSv11"] = "TLSv1_1";
    ApplicationGatewaySslProtocol["TLSv12"] = "TLSv1_2";
})(ApplicationGatewaySslProtocol || (ApplicationGatewaySslProtocol = {}));
/**
 * Defines values for ApplicationGatewaySslPolicyType.
 * Possible values include: 'Predefined', 'Custom'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewaySslPolicyType =
 * <ApplicationGatewaySslPolicyType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewaySslPolicyType;
(function (ApplicationGatewaySslPolicyType) {
    ApplicationGatewaySslPolicyType["Predefined"] = "Predefined";
    ApplicationGatewaySslPolicyType["Custom"] = "Custom";
})(ApplicationGatewaySslPolicyType || (ApplicationGatewaySslPolicyType = {}));
/**
 * Defines values for ApplicationGatewaySslPolicyName.
 * Possible values include: 'AppGwSslPolicy20150501', 'AppGwSslPolicy20170401',
 * 'AppGwSslPolicy20170401S'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewaySslPolicyName =
 * <ApplicationGatewaySslPolicyName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewaySslPolicyName;
(function (ApplicationGatewaySslPolicyName) {
    ApplicationGatewaySslPolicyName["AppGwSslPolicy20150501"] = "AppGwSslPolicy20150501";
    ApplicationGatewaySslPolicyName["AppGwSslPolicy20170401"] = "AppGwSslPolicy20170401";
    ApplicationGatewaySslPolicyName["AppGwSslPolicy20170401S"] = "AppGwSslPolicy20170401S";
})(ApplicationGatewaySslPolicyName || (ApplicationGatewaySslPolicyName = {}));
/**
 * Defines values for ApplicationGatewaySslCipherSuite.
 * Possible values include: 'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384',
 * 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256',
 * 'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA', 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA',
 * 'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384',
 * 'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256', 'TLS_DHE_RSA_WITH_AES_256_CBC_SHA',
 * 'TLS_DHE_RSA_WITH_AES_128_CBC_SHA', 'TLS_RSA_WITH_AES_256_GCM_SHA384',
 * 'TLS_RSA_WITH_AES_128_GCM_SHA256', 'TLS_RSA_WITH_AES_256_CBC_SHA256',
 * 'TLS_RSA_WITH_AES_128_CBC_SHA256', 'TLS_RSA_WITH_AES_256_CBC_SHA',
 * 'TLS_RSA_WITH_AES_128_CBC_SHA', 'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384',
 * 'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256',
 * 'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384',
 * 'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256',
 * 'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA',
 * 'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA',
 * 'TLS_DHE_DSS_WITH_AES_256_CBC_SHA256',
 * 'TLS_DHE_DSS_WITH_AES_128_CBC_SHA256', 'TLS_DHE_DSS_WITH_AES_256_CBC_SHA',
 * 'TLS_DHE_DSS_WITH_AES_128_CBC_SHA', 'TLS_RSA_WITH_3DES_EDE_CBC_SHA'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewaySslCipherSuite =
 * <ApplicationGatewaySslCipherSuite>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewaySslCipherSuite;
(function (ApplicationGatewaySslCipherSuite) {
    ApplicationGatewaySslCipherSuite["TLSECDHERSAWITHAES256CBCSHA384"] = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384";
    ApplicationGatewaySslCipherSuite["TLSECDHERSAWITHAES128CBCSHA256"] = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256";
    ApplicationGatewaySslCipherSuite["TLSECDHERSAWITHAES256CBCSHA"] = "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSECDHERSAWITHAES128CBCSHA"] = "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSDHERSAWITHAES256GCMSHA384"] = "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384";
    ApplicationGatewaySslCipherSuite["TLSDHERSAWITHAES128GCMSHA256"] = "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256";
    ApplicationGatewaySslCipherSuite["TLSDHERSAWITHAES256CBCSHA"] = "TLS_DHE_RSA_WITH_AES_256_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSDHERSAWITHAES128CBCSHA"] = "TLS_DHE_RSA_WITH_AES_128_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSRSAWITHAES256GCMSHA384"] = "TLS_RSA_WITH_AES_256_GCM_SHA384";
    ApplicationGatewaySslCipherSuite["TLSRSAWITHAES128GCMSHA256"] = "TLS_RSA_WITH_AES_128_GCM_SHA256";
    ApplicationGatewaySslCipherSuite["TLSRSAWITHAES256CBCSHA256"] = "TLS_RSA_WITH_AES_256_CBC_SHA256";
    ApplicationGatewaySslCipherSuite["TLSRSAWITHAES128CBCSHA256"] = "TLS_RSA_WITH_AES_128_CBC_SHA256";
    ApplicationGatewaySslCipherSuite["TLSRSAWITHAES256CBCSHA"] = "TLS_RSA_WITH_AES_256_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSRSAWITHAES128CBCSHA"] = "TLS_RSA_WITH_AES_128_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSECDHEECDSAWITHAES256GCMSHA384"] = "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384";
    ApplicationGatewaySslCipherSuite["TLSECDHEECDSAWITHAES128GCMSHA256"] = "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256";
    ApplicationGatewaySslCipherSuite["TLSECDHEECDSAWITHAES256CBCSHA384"] = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384";
    ApplicationGatewaySslCipherSuite["TLSECDHEECDSAWITHAES128CBCSHA256"] = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256";
    ApplicationGatewaySslCipherSuite["TLSECDHEECDSAWITHAES256CBCSHA"] = "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSECDHEECDSAWITHAES128CBCSHA"] = "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSDHEDSSWITHAES256CBCSHA256"] = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256";
    ApplicationGatewaySslCipherSuite["TLSDHEDSSWITHAES128CBCSHA256"] = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256";
    ApplicationGatewaySslCipherSuite["TLSDHEDSSWITHAES256CBCSHA"] = "TLS_DHE_DSS_WITH_AES_256_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSDHEDSSWITHAES128CBCSHA"] = "TLS_DHE_DSS_WITH_AES_128_CBC_SHA";
    ApplicationGatewaySslCipherSuite["TLSRSAWITH3DESEDECBCSHA"] = "TLS_RSA_WITH_3DES_EDE_CBC_SHA";
})(ApplicationGatewaySslCipherSuite || (ApplicationGatewaySslCipherSuite = {}));
/**
 * Defines values for ApplicationGatewayRequestRoutingRuleType.
 * Possible values include: 'Basic', 'PathBasedRouting'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayRequestRoutingRuleType =
 * <ApplicationGatewayRequestRoutingRuleType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayRequestRoutingRuleType;
(function (ApplicationGatewayRequestRoutingRuleType) {
    ApplicationGatewayRequestRoutingRuleType["Basic"] = "Basic";
    ApplicationGatewayRequestRoutingRuleType["PathBasedRouting"] = "PathBasedRouting";
})(ApplicationGatewayRequestRoutingRuleType || (ApplicationGatewayRequestRoutingRuleType = {}));
/**
 * Defines values for ApplicationGatewayRedirectType.
 * Possible values include: 'Permanent', 'Found', 'SeeOther', 'Temporary'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayRedirectType =
 * <ApplicationGatewayRedirectType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayRedirectType;
(function (ApplicationGatewayRedirectType) {
    ApplicationGatewayRedirectType["Permanent"] = "Permanent";
    ApplicationGatewayRedirectType["Found"] = "Found";
    ApplicationGatewayRedirectType["SeeOther"] = "SeeOther";
    ApplicationGatewayRedirectType["Temporary"] = "Temporary";
})(ApplicationGatewayRedirectType || (ApplicationGatewayRedirectType = {}));
/**
 * Defines values for ApplicationGatewayOperationalState.
 * Possible values include: 'Stopped', 'Starting', 'Running', 'Stopping'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayOperationalState =
 * <ApplicationGatewayOperationalState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayOperationalState;
(function (ApplicationGatewayOperationalState) {
    ApplicationGatewayOperationalState["Stopped"] = "Stopped";
    ApplicationGatewayOperationalState["Starting"] = "Starting";
    ApplicationGatewayOperationalState["Running"] = "Running";
    ApplicationGatewayOperationalState["Stopping"] = "Stopping";
})(ApplicationGatewayOperationalState || (ApplicationGatewayOperationalState = {}));
/**
 * Defines values for ApplicationGatewayFirewallMode.
 * Possible values include: 'Detection', 'Prevention'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApplicationGatewayFirewallMode =
 * <ApplicationGatewayFirewallMode>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ApplicationGatewayFirewallMode;
(function (ApplicationGatewayFirewallMode) {
    ApplicationGatewayFirewallMode["Detection"] = "Detection";
    ApplicationGatewayFirewallMode["Prevention"] = "Prevention";
})(ApplicationGatewayFirewallMode || (ApplicationGatewayFirewallMode = {}));
/**
 * Defines values for AuthorizationUseStatus.
 * Possible values include: 'Available', 'InUse'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: AuthorizationUseStatus =
 * <AuthorizationUseStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var AuthorizationUseStatus;
(function (AuthorizationUseStatus) {
    AuthorizationUseStatus["Available"] = "Available";
    AuthorizationUseStatus["InUse"] = "InUse";
})(AuthorizationUseStatus || (AuthorizationUseStatus = {}));
/**
 * Defines values for ExpressRouteCircuitPeeringAdvertisedPublicPrefixState.
 * Possible values include: 'NotConfigured', 'Configuring', 'Configured',
 * 'ValidationNeeded'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ExpressRouteCircuitPeeringAdvertisedPublicPrefixState =
 * <ExpressRouteCircuitPeeringAdvertisedPublicPrefixState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ExpressRouteCircuitPeeringAdvertisedPublicPrefixState;
(function (ExpressRouteCircuitPeeringAdvertisedPublicPrefixState) {
    ExpressRouteCircuitPeeringAdvertisedPublicPrefixState["NotConfigured"] = "NotConfigured";
    ExpressRouteCircuitPeeringAdvertisedPublicPrefixState["Configuring"] = "Configuring";
    ExpressRouteCircuitPeeringAdvertisedPublicPrefixState["Configured"] = "Configured";
    ExpressRouteCircuitPeeringAdvertisedPublicPrefixState["ValidationNeeded"] = "ValidationNeeded";
})(ExpressRouteCircuitPeeringAdvertisedPublicPrefixState || (ExpressRouteCircuitPeeringAdvertisedPublicPrefixState = {}));
/**
 * Defines values for Access.
 * Possible values include: 'Allow', 'Deny'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Access = <Access>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var Access;
(function (Access) {
    Access["Allow"] = "Allow";
    Access["Deny"] = "Deny";
})(Access || (Access = {}));
/**
 * Defines values for ExpressRouteCircuitPeeringType.
 * Possible values include: 'AzurePublicPeering', 'AzurePrivatePeering',
 * 'MicrosoftPeering'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ExpressRouteCircuitPeeringType =
 * <ExpressRouteCircuitPeeringType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ExpressRouteCircuitPeeringType;
(function (ExpressRouteCircuitPeeringType) {
    ExpressRouteCircuitPeeringType["AzurePublicPeering"] = "AzurePublicPeering";
    ExpressRouteCircuitPeeringType["AzurePrivatePeering"] = "AzurePrivatePeering";
    ExpressRouteCircuitPeeringType["MicrosoftPeering"] = "MicrosoftPeering";
})(ExpressRouteCircuitPeeringType || (ExpressRouteCircuitPeeringType = {}));
/**
 * Defines values for ExpressRouteCircuitPeeringState.
 * Possible values include: 'Disabled', 'Enabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ExpressRouteCircuitPeeringState =
 * <ExpressRouteCircuitPeeringState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ExpressRouteCircuitPeeringState;
(function (ExpressRouteCircuitPeeringState) {
    ExpressRouteCircuitPeeringState["Disabled"] = "Disabled";
    ExpressRouteCircuitPeeringState["Enabled"] = "Enabled";
})(ExpressRouteCircuitPeeringState || (ExpressRouteCircuitPeeringState = {}));
/**
 * Defines values for ExpressRouteCircuitSkuTier.
 * Possible values include: 'Standard', 'Premium'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ExpressRouteCircuitSkuTier =
 * <ExpressRouteCircuitSkuTier>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ExpressRouteCircuitSkuTier;
(function (ExpressRouteCircuitSkuTier) {
    ExpressRouteCircuitSkuTier["Standard"] = "Standard";
    ExpressRouteCircuitSkuTier["Premium"] = "Premium";
})(ExpressRouteCircuitSkuTier || (ExpressRouteCircuitSkuTier = {}));
/**
 * Defines values for ExpressRouteCircuitSkuFamily.
 * Possible values include: 'UnlimitedData', 'MeteredData'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ExpressRouteCircuitSkuFamily =
 * <ExpressRouteCircuitSkuFamily>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ExpressRouteCircuitSkuFamily;
(function (ExpressRouteCircuitSkuFamily) {
    ExpressRouteCircuitSkuFamily["UnlimitedData"] = "UnlimitedData";
    ExpressRouteCircuitSkuFamily["MeteredData"] = "MeteredData";
})(ExpressRouteCircuitSkuFamily || (ExpressRouteCircuitSkuFamily = {}));
/**
 * Defines values for ServiceProviderProvisioningState.
 * Possible values include: 'NotProvisioned', 'Provisioning', 'Provisioned',
 * 'Deprovisioning'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ServiceProviderProvisioningState =
 * <ServiceProviderProvisioningState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ServiceProviderProvisioningState;
(function (ServiceProviderProvisioningState) {
    ServiceProviderProvisioningState["NotProvisioned"] = "NotProvisioned";
    ServiceProviderProvisioningState["Provisioning"] = "Provisioning";
    ServiceProviderProvisioningState["Provisioned"] = "Provisioned";
    ServiceProviderProvisioningState["Deprovisioning"] = "Deprovisioning";
})(ServiceProviderProvisioningState || (ServiceProviderProvisioningState = {}));
/**
 * Defines values for LoadBalancerSkuName.
 * Possible values include: 'Basic', 'Standard'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: LoadBalancerSkuName =
 * <LoadBalancerSkuName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var LoadBalancerSkuName;
(function (LoadBalancerSkuName) {
    LoadBalancerSkuName["Basic"] = "Basic";
    LoadBalancerSkuName["Standard"] = "Standard";
})(LoadBalancerSkuName || (LoadBalancerSkuName = {}));
/**
 * Defines values for LoadDistribution.
 * Possible values include: 'Default', 'SourceIP', 'SourceIPProtocol'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: LoadDistribution =
 * <LoadDistribution>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var LoadDistribution;
(function (LoadDistribution) {
    LoadDistribution["Default"] = "Default";
    LoadDistribution["SourceIP"] = "SourceIP";
    LoadDistribution["SourceIPProtocol"] = "SourceIPProtocol";
})(LoadDistribution || (LoadDistribution = {}));
/**
 * Defines values for ProbeProtocol.
 * Possible values include: 'Http', 'Tcp'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ProbeProtocol =
 * <ProbeProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ProbeProtocol;
(function (ProbeProtocol) {
    ProbeProtocol["Http"] = "Http";
    ProbeProtocol["Tcp"] = "Tcp";
})(ProbeProtocol || (ProbeProtocol = {}));
/**
 * Defines values for NetworkOperationStatus.
 * Possible values include: 'InProgress', 'Succeeded', 'Failed'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: NetworkOperationStatus =
 * <NetworkOperationStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var NetworkOperationStatus;
(function (NetworkOperationStatus) {
    NetworkOperationStatus["InProgress"] = "InProgress";
    NetworkOperationStatus["Succeeded"] = "Succeeded";
    NetworkOperationStatus["Failed"] = "Failed";
})(NetworkOperationStatus || (NetworkOperationStatus = {}));
/**
 * Defines values for EffectiveSecurityRuleProtocol.
 * Possible values include: 'Tcp', 'Udp', 'All'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: EffectiveSecurityRuleProtocol =
 * <EffectiveSecurityRuleProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var EffectiveSecurityRuleProtocol;
(function (EffectiveSecurityRuleProtocol) {
    EffectiveSecurityRuleProtocol["Tcp"] = "Tcp";
    EffectiveSecurityRuleProtocol["Udp"] = "Udp";
    EffectiveSecurityRuleProtocol["All"] = "All";
})(EffectiveSecurityRuleProtocol || (EffectiveSecurityRuleProtocol = {}));
/**
 * Defines values for EffectiveRouteSource.
 * Possible values include: 'Unknown', 'User', 'VirtualNetworkGateway',
 * 'Default'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: EffectiveRouteSource =
 * <EffectiveRouteSource>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var EffectiveRouteSource;
(function (EffectiveRouteSource) {
    EffectiveRouteSource["Unknown"] = "Unknown";
    EffectiveRouteSource["User"] = "User";
    EffectiveRouteSource["VirtualNetworkGateway"] = "VirtualNetworkGateway";
    EffectiveRouteSource["Default"] = "Default";
})(EffectiveRouteSource || (EffectiveRouteSource = {}));
/**
 * Defines values for EffectiveRouteState.
 * Possible values include: 'Active', 'Invalid'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: EffectiveRouteState =
 * <EffectiveRouteState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var EffectiveRouteState;
(function (EffectiveRouteState) {
    EffectiveRouteState["Active"] = "Active";
    EffectiveRouteState["Invalid"] = "Invalid";
})(EffectiveRouteState || (EffectiveRouteState = {}));
/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ProvisioningState =
 * <ProvisioningState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ProvisioningState;
(function (ProvisioningState) {
    ProvisioningState["Succeeded"] = "Succeeded";
    ProvisioningState["Updating"] = "Updating";
    ProvisioningState["Deleting"] = "Deleting";
    ProvisioningState["Failed"] = "Failed";
})(ProvisioningState || (ProvisioningState = {}));
/**
 * Defines values for AssociationType.
 * Possible values include: 'Associated', 'Contains'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: AssociationType =
 * <AssociationType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var AssociationType;
(function (AssociationType) {
    AssociationType["Associated"] = "Associated";
    AssociationType["Contains"] = "Contains";
})(AssociationType || (AssociationType = {}));
/**
 * Defines values for Direction.
 * Possible values include: 'Inbound', 'Outbound'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Direction = <Direction>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var Direction;
(function (Direction) {
    Direction["Inbound"] = "Inbound";
    Direction["Outbound"] = "Outbound";
})(Direction || (Direction = {}));
/**
 * Defines values for Protocol.
 * Possible values include: 'TCP', 'UDP'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Protocol = <Protocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var Protocol;
(function (Protocol) {
    Protocol["TCP"] = "TCP";
    Protocol["UDP"] = "UDP";
})(Protocol || (Protocol = {}));
/**
 * Defines values for NextHopType.
 * Possible values include: 'Internet', 'VirtualAppliance',
 * 'VirtualNetworkGateway', 'VnetLocal', 'HyperNetGateway', 'None'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: NextHopType =
 * <NextHopType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var NextHopType;
(function (NextHopType) {
    NextHopType["Internet"] = "Internet";
    NextHopType["VirtualAppliance"] = "VirtualAppliance";
    NextHopType["VirtualNetworkGateway"] = "VirtualNetworkGateway";
    NextHopType["VnetLocal"] = "VnetLocal";
    NextHopType["HyperNetGateway"] = "HyperNetGateway";
    NextHopType["None"] = "None";
})(NextHopType || (NextHopType = {}));
/**
 * Defines values for PcProtocol.
 * Possible values include: 'TCP', 'UDP', 'Any'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PcProtocol = <PcProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var PcProtocol;
(function (PcProtocol) {
    PcProtocol["TCP"] = "TCP";
    PcProtocol["UDP"] = "UDP";
    PcProtocol["Any"] = "Any";
})(PcProtocol || (PcProtocol = {}));
/**
 * Defines values for PcStatus.
 * Possible values include: 'NotStarted', 'Running', 'Stopped', 'Error',
 * 'Unknown'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PcStatus = <PcStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var PcStatus;
(function (PcStatus) {
    PcStatus["NotStarted"] = "NotStarted";
    PcStatus["Running"] = "Running";
    PcStatus["Stopped"] = "Stopped";
    PcStatus["Error"] = "Error";
    PcStatus["Unknown"] = "Unknown";
})(PcStatus || (PcStatus = {}));
/**
 * Defines values for PcError.
 * Possible values include: 'InternalError', 'AgentStopped', 'CaptureFailed',
 * 'LocalFileFailed', 'StorageFailed'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PcError = <PcError>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var PcError;
(function (PcError) {
    PcError["InternalError"] = "InternalError";
    PcError["AgentStopped"] = "AgentStopped";
    PcError["CaptureFailed"] = "CaptureFailed";
    PcError["LocalFileFailed"] = "LocalFileFailed";
    PcError["StorageFailed"] = "StorageFailed";
})(PcError || (PcError = {}));
/**
 * Defines values for Origin.
 * Possible values include: 'Local', 'Inbound', 'Outbound'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Origin = <Origin>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var Origin;
(function (Origin) {
    Origin["Local"] = "Local";
    Origin["Inbound"] = "Inbound";
    Origin["Outbound"] = "Outbound";
})(Origin || (Origin = {}));
/**
 * Defines values for Severity.
 * Possible values include: 'Error', 'Warning'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Severity = <Severity>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var Severity;
(function (Severity) {
    Severity["Error"] = "Error";
    Severity["Warning"] = "Warning";
})(Severity || (Severity = {}));
/**
 * Defines values for IssueType.
 * Possible values include: 'Unknown', 'AgentStopped', 'GuestFirewall',
 * 'DnsResolution', 'SocketBind', 'NetworkSecurityRule', 'UserDefinedRoute',
 * 'PortThrottled', 'Platform'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IssueType = <IssueType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var IssueType;
(function (IssueType) {
    IssueType["Unknown"] = "Unknown";
    IssueType["AgentStopped"] = "AgentStopped";
    IssueType["GuestFirewall"] = "GuestFirewall";
    IssueType["DnsResolution"] = "DnsResolution";
    IssueType["SocketBind"] = "SocketBind";
    IssueType["NetworkSecurityRule"] = "NetworkSecurityRule";
    IssueType["UserDefinedRoute"] = "UserDefinedRoute";
    IssueType["PortThrottled"] = "PortThrottled";
    IssueType["Platform"] = "Platform";
})(IssueType || (IssueType = {}));
/**
 * Defines values for ConnectionStatus.
 * Possible values include: 'Unknown', 'Connected', 'Disconnected', 'Degraded'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ConnectionStatus =
 * <ConnectionStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ConnectionStatus;
(function (ConnectionStatus) {
    ConnectionStatus["Unknown"] = "Unknown";
    ConnectionStatus["Connected"] = "Connected";
    ConnectionStatus["Disconnected"] = "Disconnected";
    ConnectionStatus["Degraded"] = "Degraded";
})(ConnectionStatus || (ConnectionStatus = {}));
/**
 * Defines values for VirtualNetworkPeeringState.
 * Possible values include: 'Initiated', 'Connected', 'Disconnected'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VirtualNetworkPeeringState =
 * <VirtualNetworkPeeringState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VirtualNetworkPeeringState;
(function (VirtualNetworkPeeringState) {
    VirtualNetworkPeeringState["Initiated"] = "Initiated";
    VirtualNetworkPeeringState["Connected"] = "Connected";
    VirtualNetworkPeeringState["Disconnected"] = "Disconnected";
})(VirtualNetworkPeeringState || (VirtualNetworkPeeringState = {}));
/**
 * Defines values for VirtualNetworkGatewayType.
 * Possible values include: 'Vpn', 'ExpressRoute'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VirtualNetworkGatewayType =
 * <VirtualNetworkGatewayType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VirtualNetworkGatewayType;
(function (VirtualNetworkGatewayType) {
    VirtualNetworkGatewayType["Vpn"] = "Vpn";
    VirtualNetworkGatewayType["ExpressRoute"] = "ExpressRoute";
})(VirtualNetworkGatewayType || (VirtualNetworkGatewayType = {}));
/**
 * Defines values for VpnType.
 * Possible values include: 'PolicyBased', 'RouteBased'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VpnType = <VpnType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VpnType;
(function (VpnType) {
    VpnType["PolicyBased"] = "PolicyBased";
    VpnType["RouteBased"] = "RouteBased";
})(VpnType || (VpnType = {}));
/**
 * Defines values for VirtualNetworkGatewaySkuName.
 * Possible values include: 'Basic', 'HighPerformance', 'Standard',
 * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VirtualNetworkGatewaySkuName =
 * <VirtualNetworkGatewaySkuName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VirtualNetworkGatewaySkuName;
(function (VirtualNetworkGatewaySkuName) {
    VirtualNetworkGatewaySkuName["Basic"] = "Basic";
    VirtualNetworkGatewaySkuName["HighPerformance"] = "HighPerformance";
    VirtualNetworkGatewaySkuName["Standard"] = "Standard";
    VirtualNetworkGatewaySkuName["UltraPerformance"] = "UltraPerformance";
    VirtualNetworkGatewaySkuName["VpnGw1"] = "VpnGw1";
    VirtualNetworkGatewaySkuName["VpnGw2"] = "VpnGw2";
    VirtualNetworkGatewaySkuName["VpnGw3"] = "VpnGw3";
})(VirtualNetworkGatewaySkuName || (VirtualNetworkGatewaySkuName = {}));
/**
 * Defines values for VirtualNetworkGatewaySkuTier.
 * Possible values include: 'Basic', 'HighPerformance', 'Standard',
 * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VirtualNetworkGatewaySkuTier =
 * <VirtualNetworkGatewaySkuTier>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VirtualNetworkGatewaySkuTier;
(function (VirtualNetworkGatewaySkuTier) {
    VirtualNetworkGatewaySkuTier["Basic"] = "Basic";
    VirtualNetworkGatewaySkuTier["HighPerformance"] = "HighPerformance";
    VirtualNetworkGatewaySkuTier["Standard"] = "Standard";
    VirtualNetworkGatewaySkuTier["UltraPerformance"] = "UltraPerformance";
    VirtualNetworkGatewaySkuTier["VpnGw1"] = "VpnGw1";
    VirtualNetworkGatewaySkuTier["VpnGw2"] = "VpnGw2";
    VirtualNetworkGatewaySkuTier["VpnGw3"] = "VpnGw3";
})(VirtualNetworkGatewaySkuTier || (VirtualNetworkGatewaySkuTier = {}));
/**
 * Defines values for VpnClientProtocol.
 * Possible values include: 'IkeV2', 'SSTP'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VpnClientProtocol =
 * <VpnClientProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VpnClientProtocol;
(function (VpnClientProtocol) {
    VpnClientProtocol["IkeV2"] = "IkeV2";
    VpnClientProtocol["SSTP"] = "SSTP";
})(VpnClientProtocol || (VpnClientProtocol = {}));
/**
 * Defines values for BgpPeerState.
 * Possible values include: 'Unknown', 'Stopped', 'Idle', 'Connecting',
 * 'Connected'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: BgpPeerState =
 * <BgpPeerState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var BgpPeerState;
(function (BgpPeerState) {
    BgpPeerState["Unknown"] = "Unknown";
    BgpPeerState["Stopped"] = "Stopped";
    BgpPeerState["Idle"] = "Idle";
    BgpPeerState["Connecting"] = "Connecting";
    BgpPeerState["Connected"] = "Connected";
})(BgpPeerState || (BgpPeerState = {}));
/**
 * Defines values for ProcessorArchitecture.
 * Possible values include: 'Amd64', 'X86'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ProcessorArchitecture =
 * <ProcessorArchitecture>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var ProcessorArchitecture;
(function (ProcessorArchitecture) {
    ProcessorArchitecture["Amd64"] = "Amd64";
    ProcessorArchitecture["X86"] = "X86";
})(ProcessorArchitecture || (ProcessorArchitecture = {}));
/**
 * Defines values for AuthenticationMethod.
 * Possible values include: 'EAPTLS', 'EAPMSCHAPv2'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: AuthenticationMethod =
 * <AuthenticationMethod>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var AuthenticationMethod;
(function (AuthenticationMethod) {
    AuthenticationMethod["EAPTLS"] = "EAPTLS";
    AuthenticationMethod["EAPMSCHAPv2"] = "EAPMSCHAPv2";
})(AuthenticationMethod || (AuthenticationMethod = {}));
/**
 * Defines values for VirtualNetworkGatewayConnectionStatus.
 * Possible values include: 'Unknown', 'Connecting', 'Connected',
 * 'NotConnected'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VirtualNetworkGatewayConnectionStatus =
 * <VirtualNetworkGatewayConnectionStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VirtualNetworkGatewayConnectionStatus;
(function (VirtualNetworkGatewayConnectionStatus) {
    VirtualNetworkGatewayConnectionStatus["Unknown"] = "Unknown";
    VirtualNetworkGatewayConnectionStatus["Connecting"] = "Connecting";
    VirtualNetworkGatewayConnectionStatus["Connected"] = "Connected";
    VirtualNetworkGatewayConnectionStatus["NotConnected"] = "NotConnected";
})(VirtualNetworkGatewayConnectionStatus || (VirtualNetworkGatewayConnectionStatus = {}));
/**
 * Defines values for VirtualNetworkGatewayConnectionType.
 * Possible values include: 'IPsec', 'Vnet2Vnet', 'ExpressRoute', 'VPNClient'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VirtualNetworkGatewayConnectionType =
 * <VirtualNetworkGatewayConnectionType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var VirtualNetworkGatewayConnectionType;
(function (VirtualNetworkGatewayConnectionType) {
    VirtualNetworkGatewayConnectionType["IPsec"] = "IPsec";
    VirtualNetworkGatewayConnectionType["Vnet2Vnet"] = "Vnet2Vnet";
    VirtualNetworkGatewayConnectionType["ExpressRoute"] = "ExpressRoute";
    VirtualNetworkGatewayConnectionType["VPNClient"] = "VPNClient";
})(VirtualNetworkGatewayConnectionType || (VirtualNetworkGatewayConnectionType = {}));
/**
 * Defines values for IpsecEncryption.
 * Possible values include: 'None', 'DES', 'DES3', 'AES128', 'AES192',
 * 'AES256', 'GCMAES128', 'GCMAES192', 'GCMAES256'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IpsecEncryption =
 * <IpsecEncryption>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var IpsecEncryption;
(function (IpsecEncryption) {
    IpsecEncryption["None"] = "None";
    IpsecEncryption["DES"] = "DES";
    IpsecEncryption["DES3"] = "DES3";
    IpsecEncryption["AES128"] = "AES128";
    IpsecEncryption["AES192"] = "AES192";
    IpsecEncryption["AES256"] = "AES256";
    IpsecEncryption["GCMAES128"] = "GCMAES128";
    IpsecEncryption["GCMAES192"] = "GCMAES192";
    IpsecEncryption["GCMAES256"] = "GCMAES256";
})(IpsecEncryption || (IpsecEncryption = {}));
/**
 * Defines values for IpsecIntegrity.
 * Possible values include: 'MD5', 'SHA1', 'SHA256', 'GCMAES128', 'GCMAES192',
 * 'GCMAES256'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IpsecIntegrity =
 * <IpsecIntegrity>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var IpsecIntegrity;
(function (IpsecIntegrity) {
    IpsecIntegrity["MD5"] = "MD5";
    IpsecIntegrity["SHA1"] = "SHA1";
    IpsecIntegrity["SHA256"] = "SHA256";
    IpsecIntegrity["GCMAES128"] = "GCMAES128";
    IpsecIntegrity["GCMAES192"] = "GCMAES192";
    IpsecIntegrity["GCMAES256"] = "GCMAES256";
})(IpsecIntegrity || (IpsecIntegrity = {}));
/**
 * Defines values for IkeEncryption.
 * Possible values include: 'DES', 'DES3', 'AES128', 'AES192', 'AES256'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IkeEncryption =
 * <IkeEncryption>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var IkeEncryption;
(function (IkeEncryption) {
    IkeEncryption["DES"] = "DES";
    IkeEncryption["DES3"] = "DES3";
    IkeEncryption["AES128"] = "AES128";
    IkeEncryption["AES192"] = "AES192";
    IkeEncryption["AES256"] = "AES256";
})(IkeEncryption || (IkeEncryption = {}));
/**
 * Defines values for IkeIntegrity.
 * Possible values include: 'MD5', 'SHA1', 'SHA256', 'SHA384'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IkeIntegrity =
 * <IkeIntegrity>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var IkeIntegrity;
(function (IkeIntegrity) {
    IkeIntegrity["MD5"] = "MD5";
    IkeIntegrity["SHA1"] = "SHA1";
    IkeIntegrity["SHA256"] = "SHA256";
    IkeIntegrity["SHA384"] = "SHA384";
})(IkeIntegrity || (IkeIntegrity = {}));
/**
 * Defines values for DhGroup.
 * Possible values include: 'None', 'DHGroup1', 'DHGroup2', 'DHGroup14',
 * 'DHGroup2048', 'ECP256', 'ECP384', 'DHGroup24'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DhGroup = <DhGroup>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var DhGroup;
(function (DhGroup) {
    DhGroup["None"] = "None";
    DhGroup["DHGroup1"] = "DHGroup1";
    DhGroup["DHGroup2"] = "DHGroup2";
    DhGroup["DHGroup14"] = "DHGroup14";
    DhGroup["DHGroup2048"] = "DHGroup2048";
    DhGroup["ECP256"] = "ECP256";
    DhGroup["ECP384"] = "ECP384";
    DhGroup["DHGroup24"] = "DHGroup24";
})(DhGroup || (DhGroup = {}));
/**
 * Defines values for PfsGroup.
 * Possible values include: 'None', 'PFS1', 'PFS2', 'PFS2048', 'ECP256',
 * 'ECP384', 'PFS24'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PfsGroup = <PfsGroup>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export var PfsGroup;
(function (PfsGroup) {
    PfsGroup["None"] = "None";
    PfsGroup["PFS1"] = "PFS1";
    PfsGroup["PFS2"] = "PFS2";
    PfsGroup["PFS2048"] = "PFS2048";
    PfsGroup["ECP256"] = "ECP256";
    PfsGroup["ECP384"] = "ECP384";
    PfsGroup["PFS24"] = "PFS24";
})(PfsGroup || (PfsGroup = {}));
//# sourceMappingURL=index.js.map