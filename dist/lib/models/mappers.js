/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { CloudErrorMapper, BaseResourceMapper } from "ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var SubResource = {
    required: false,
    serializedName: 'SubResource',
    type: {
        name: 'Composite',
        className: 'SubResource',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var BackendAddressPool = {
    required: false,
    serializedName: 'BackendAddressPool',
    type: {
        name: 'Composite',
        className: 'BackendAddressPool',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            backendIPConfigurations: {
                required: false,
                readOnly: true,
                serializedName: 'properties.backendIPConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkInterfaceIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkInterfaceIPConfiguration'
                        }
                    }
                }
            },
            loadBalancingRules: {
                required: false,
                readOnly: true,
                serializedName: 'properties.loadBalancingRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            outboundNatRule: {
                required: false,
                readOnly: true,
                serializedName: 'properties.outboundNatRule',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var InboundNatRule = {
    required: false,
    serializedName: 'InboundNatRule',
    type: {
        name: 'Composite',
        className: 'InboundNatRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            frontendIPConfiguration: {
                required: false,
                serializedName: 'properties.frontendIPConfiguration',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            backendIPConfiguration: {
                required: false,
                readOnly: true,
                serializedName: 'properties.backendIPConfiguration',
                type: {
                    name: 'Composite',
                    className: 'NetworkInterfaceIPConfiguration'
                }
            },
            protocol: {
                required: false,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            frontendPort: {
                required: false,
                serializedName: 'properties.frontendPort',
                type: {
                    name: 'Number'
                }
            },
            backendPort: {
                required: false,
                serializedName: 'properties.backendPort',
                type: {
                    name: 'Number'
                }
            },
            idleTimeoutInMinutes: {
                required: false,
                serializedName: 'properties.idleTimeoutInMinutes',
                type: {
                    name: 'Number'
                }
            },
            enableFloatingIP: {
                required: false,
                serializedName: 'properties.enableFloatingIP',
                type: {
                    name: 'Boolean'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var Resource = {
    required: false,
    serializedName: 'Resource',
    type: {
        name: 'Composite',
        className: 'Resource',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationSecurityGroup = {
    required: false,
    serializedName: 'ApplicationSecurityGroup',
    type: {
        name: 'Composite',
        className: 'ApplicationSecurityGroup',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            resourceGuid: {
                required: false,
                readOnly: true,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var SecurityRule = {
    required: false,
    serializedName: 'SecurityRule',
    type: {
        name: 'Composite',
        className: 'SecurityRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            description: {
                required: false,
                serializedName: 'properties.description',
                type: {
                    name: 'String'
                }
            },
            protocol: {
                required: true,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            sourcePortRange: {
                required: false,
                serializedName: 'properties.sourcePortRange',
                type: {
                    name: 'String'
                }
            },
            destinationPortRange: {
                required: false,
                serializedName: 'properties.destinationPortRange',
                type: {
                    name: 'String'
                }
            },
            sourceAddressPrefix: {
                required: true,
                serializedName: 'properties.sourceAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            sourceAddressPrefixes: {
                required: false,
                serializedName: 'properties.sourceAddressPrefixes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            sourceApplicationSecurityGroups: {
                required: false,
                serializedName: 'properties.sourceApplicationSecurityGroups',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationSecurityGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationSecurityGroup'
                        }
                    }
                }
            },
            destinationAddressPrefix: {
                required: true,
                serializedName: 'properties.destinationAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            destinationAddressPrefixes: {
                required: false,
                serializedName: 'properties.destinationAddressPrefixes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            destinationApplicationSecurityGroups: {
                required: false,
                serializedName: 'properties.destinationApplicationSecurityGroups',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationSecurityGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationSecurityGroup'
                        }
                    }
                }
            },
            sourcePortRanges: {
                required: false,
                serializedName: 'properties.sourcePortRanges',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            destinationPortRanges: {
                required: false,
                serializedName: 'properties.destinationPortRanges',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            access: {
                required: true,
                serializedName: 'properties.access',
                type: {
                    name: 'String'
                }
            },
            priority: {
                required: false,
                serializedName: 'properties.priority',
                type: {
                    name: 'Number'
                }
            },
            direction: {
                required: true,
                serializedName: 'properties.direction',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfaceDnsSettings = {
    required: false,
    serializedName: 'NetworkInterfaceDnsSettings',
    type: {
        name: 'Composite',
        className: 'NetworkInterfaceDnsSettings',
        modelProperties: {
            dnsServers: {
                required: false,
                serializedName: 'dnsServers',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            appliedDnsServers: {
                required: false,
                serializedName: 'appliedDnsServers',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            internalDnsNameLabel: {
                required: false,
                serializedName: 'internalDnsNameLabel',
                type: {
                    name: 'String'
                }
            },
            internalFqdn: {
                required: false,
                serializedName: 'internalFqdn',
                type: {
                    name: 'String'
                }
            },
            internalDomainNameSuffix: {
                required: false,
                serializedName: 'internalDomainNameSuffix',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterface = {
    required: false,
    serializedName: 'NetworkInterface',
    type: {
        name: 'Composite',
        className: 'NetworkInterface',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            virtualMachine: {
                required: false,
                serializedName: 'properties.virtualMachine',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            networkSecurityGroup: {
                required: false,
                serializedName: 'properties.networkSecurityGroup',
                type: {
                    name: 'Composite',
                    className: 'NetworkSecurityGroup'
                }
            },
            ipConfigurations: {
                required: false,
                serializedName: 'properties.ipConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkInterfaceIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkInterfaceIPConfiguration'
                        }
                    }
                }
            },
            dnsSettings: {
                required: false,
                serializedName: 'properties.dnsSettings',
                type: {
                    name: 'Composite',
                    className: 'NetworkInterfaceDnsSettings'
                }
            },
            macAddress: {
                required: false,
                serializedName: 'properties.macAddress',
                type: {
                    name: 'String'
                }
            },
            primary: {
                required: false,
                serializedName: 'properties.primary',
                type: {
                    name: 'Boolean'
                }
            },
            enableAcceleratedNetworking: {
                required: false,
                serializedName: 'properties.enableAcceleratedNetworking',
                type: {
                    name: 'Boolean'
                }
            },
            enableIPForwarding: {
                required: false,
                serializedName: 'properties.enableIPForwarding',
                type: {
                    name: 'Boolean'
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkSecurityGroup = {
    required: false,
    serializedName: 'NetworkSecurityGroup',
    type: {
        name: 'Composite',
        className: 'NetworkSecurityGroup',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            securityRules: {
                required: false,
                serializedName: 'properties.securityRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'SecurityRule'
                        }
                    }
                }
            },
            defaultSecurityRules: {
                required: false,
                serializedName: 'properties.defaultSecurityRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'SecurityRule'
                        }
                    }
                }
            },
            networkInterfaces: {
                required: false,
                readOnly: true,
                serializedName: 'properties.networkInterfaces',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkInterfaceElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkInterface'
                        }
                    }
                }
            },
            subnets: {
                required: false,
                readOnly: true,
                serializedName: 'properties.subnets',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubnetElementType',
                        type: {
                            name: 'Composite',
                            className: 'Subnet'
                        }
                    }
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var Route = {
    required: false,
    serializedName: 'Route',
    type: {
        name: 'Composite',
        className: 'Route',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            addressPrefix: {
                required: false,
                serializedName: 'properties.addressPrefix',
                type: {
                    name: 'String'
                }
            },
            nextHopType: {
                required: true,
                serializedName: 'properties.nextHopType',
                type: {
                    name: 'String'
                }
            },
            nextHopIpAddress: {
                required: false,
                serializedName: 'properties.nextHopIpAddress',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteTable = {
    required: false,
    serializedName: 'RouteTable',
    type: {
        name: 'Composite',
        className: 'RouteTable',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            routes: {
                required: false,
                serializedName: 'properties.routes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'RouteElementType',
                        type: {
                            name: 'Composite',
                            className: 'Route'
                        }
                    }
                }
            },
            subnets: {
                required: false,
                readOnly: true,
                serializedName: 'properties.subnets',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubnetElementType',
                        type: {
                            name: 'Composite',
                            className: 'Subnet'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ServiceEndpointPropertiesFormat = {
    required: false,
    serializedName: 'ServiceEndpointPropertiesFormat',
    type: {
        name: 'Composite',
        className: 'ServiceEndpointPropertiesFormat',
        modelProperties: {
            service: {
                required: false,
                serializedName: 'service',
                type: {
                    name: 'String'
                }
            },
            locations: {
                required: false,
                serializedName: 'locations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'provisioningState',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PublicIPAddressSku = {
    required: false,
    serializedName: 'PublicIPAddressSku',
    type: {
        name: 'Composite',
        className: 'PublicIPAddressSku',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PublicIPAddressDnsSettings = {
    required: false,
    serializedName: 'PublicIPAddressDnsSettings',
    type: {
        name: 'Composite',
        className: 'PublicIPAddressDnsSettings',
        modelProperties: {
            domainNameLabel: {
                required: false,
                serializedName: 'domainNameLabel',
                type: {
                    name: 'String'
                }
            },
            fqdn: {
                required: false,
                serializedName: 'fqdn',
                type: {
                    name: 'String'
                }
            },
            reverseFqdn: {
                required: false,
                serializedName: 'reverseFqdn',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PublicIPAddress = {
    required: false,
    serializedName: 'PublicIPAddress',
    type: {
        name: 'Composite',
        className: 'PublicIPAddress',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            sku: {
                required: false,
                serializedName: 'sku',
                type: {
                    name: 'Composite',
                    className: 'PublicIPAddressSku'
                }
            },
            publicIPAllocationMethod: {
                required: false,
                serializedName: 'properties.publicIPAllocationMethod',
                type: {
                    name: 'String'
                }
            },
            publicIPAddressVersion: {
                required: false,
                serializedName: 'properties.publicIPAddressVersion',
                type: {
                    name: 'String'
                }
            },
            ipConfiguration: {
                required: false,
                readOnly: true,
                serializedName: 'properties.ipConfiguration',
                type: {
                    name: 'Composite',
                    className: 'IPConfiguration'
                }
            },
            dnsSettings: {
                required: false,
                serializedName: 'properties.dnsSettings',
                type: {
                    name: 'Composite',
                    className: 'PublicIPAddressDnsSettings'
                }
            },
            ipAddress: {
                required: false,
                serializedName: 'properties.ipAddress',
                type: {
                    name: 'String'
                }
            },
            idleTimeoutInMinutes: {
                required: false,
                serializedName: 'properties.idleTimeoutInMinutes',
                type: {
                    name: 'Number'
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            zones: {
                required: false,
                serializedName: 'zones',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var IPConfiguration = {
    required: false,
    serializedName: 'IPConfiguration',
    type: {
        name: 'Composite',
        className: 'IPConfiguration',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            privateIPAddress: {
                required: false,
                serializedName: 'properties.privateIPAddress',
                type: {
                    name: 'String'
                }
            },
            privateIPAllocationMethod: {
                required: false,
                serializedName: 'properties.privateIPAllocationMethod',
                type: {
                    name: 'String'
                }
            },
            subnet: {
                required: false,
                serializedName: 'properties.subnet',
                type: {
                    name: 'Composite',
                    className: 'Subnet'
                }
            },
            publicIPAddress: {
                required: false,
                serializedName: 'properties.publicIPAddress',
                type: {
                    name: 'Composite',
                    className: 'PublicIPAddress'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ResourceNavigationLink = {
    required: false,
    serializedName: 'ResourceNavigationLink',
    type: {
        name: 'Composite',
        className: 'ResourceNavigationLink',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            linkedResourceType: {
                required: false,
                serializedName: 'properties.linkedResourceType',
                type: {
                    name: 'String'
                }
            },
            link: {
                required: false,
                serializedName: 'properties.link',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var Subnet = {
    required: false,
    serializedName: 'Subnet',
    type: {
        name: 'Composite',
        className: 'Subnet',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            addressPrefix: {
                required: false,
                serializedName: 'properties.addressPrefix',
                type: {
                    name: 'String'
                }
            },
            networkSecurityGroup: {
                required: false,
                serializedName: 'properties.networkSecurityGroup',
                type: {
                    name: 'Composite',
                    className: 'NetworkSecurityGroup'
                }
            },
            routeTable: {
                required: false,
                serializedName: 'properties.routeTable',
                type: {
                    name: 'Composite',
                    className: 'RouteTable'
                }
            },
            serviceEndpoints: {
                required: false,
                serializedName: 'properties.serviceEndpoints',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ServiceEndpointPropertiesFormatElementType',
                        type: {
                            name: 'Composite',
                            className: 'ServiceEndpointPropertiesFormat'
                        }
                    }
                }
            },
            ipConfigurations: {
                required: false,
                readOnly: true,
                serializedName: 'properties.ipConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'IPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'IPConfiguration'
                        }
                    }
                }
            },
            resourceNavigationLinks: {
                required: false,
                serializedName: 'properties.resourceNavigationLinks',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ResourceNavigationLinkElementType',
                        type: {
                            name: 'Composite',
                            className: 'ResourceNavigationLink'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfaceIPConfiguration = {
    required: false,
    serializedName: 'NetworkInterfaceIPConfiguration',
    type: {
        name: 'Composite',
        className: 'NetworkInterfaceIPConfiguration',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            applicationGatewayBackendAddressPools: {
                required: false,
                serializedName: 'properties.applicationGatewayBackendAddressPools',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayBackendAddressPoolElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayBackendAddressPool'
                        }
                    }
                }
            },
            loadBalancerBackendAddressPools: {
                required: false,
                serializedName: 'properties.loadBalancerBackendAddressPools',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'BackendAddressPoolElementType',
                        type: {
                            name: 'Composite',
                            className: 'BackendAddressPool'
                        }
                    }
                }
            },
            loadBalancerInboundNatRules: {
                required: false,
                serializedName: 'properties.loadBalancerInboundNatRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'InboundNatRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'InboundNatRule'
                        }
                    }
                }
            },
            privateIPAddress: {
                required: false,
                serializedName: 'properties.privateIPAddress',
                type: {
                    name: 'String'
                }
            },
            privateIPAllocationMethod: {
                required: false,
                serializedName: 'properties.privateIPAllocationMethod',
                type: {
                    name: 'String'
                }
            },
            privateIPAddressVersion: {
                required: false,
                serializedName: 'properties.privateIPAddressVersion',
                type: {
                    name: 'String'
                }
            },
            subnet: {
                required: false,
                serializedName: 'properties.subnet',
                type: {
                    name: 'Composite',
                    className: 'Subnet'
                }
            },
            primary: {
                required: false,
                serializedName: 'properties.primary',
                type: {
                    name: 'Boolean'
                }
            },
            publicIPAddress: {
                required: false,
                serializedName: 'properties.publicIPAddress',
                type: {
                    name: 'Composite',
                    className: 'PublicIPAddress'
                }
            },
            applicationSecurityGroups: {
                required: false,
                serializedName: 'properties.applicationSecurityGroups',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationSecurityGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationSecurityGroup'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayBackendAddress = {
    required: false,
    serializedName: 'ApplicationGatewayBackendAddress',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendAddress',
        modelProperties: {
            fqdn: {
                required: false,
                serializedName: 'fqdn',
                type: {
                    name: 'String'
                }
            },
            ipAddress: {
                required: false,
                serializedName: 'ipAddress',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayBackendAddressPool = {
    required: false,
    serializedName: 'ApplicationGatewayBackendAddressPool',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendAddressPool',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            backendIPConfigurations: {
                required: false,
                serializedName: 'properties.backendIPConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkInterfaceIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkInterfaceIPConfiguration'
                        }
                    }
                }
            },
            backendAddresses: {
                required: false,
                serializedName: 'properties.backendAddresses',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayBackendAddressElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayBackendAddress'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayConnectionDraining = {
    required: false,
    serializedName: 'ApplicationGatewayConnectionDraining',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayConnectionDraining',
        modelProperties: {
            enabled: {
                required: true,
                serializedName: 'enabled',
                type: {
                    name: 'Boolean'
                }
            },
            drainTimeoutInSec: {
                required: true,
                serializedName: 'drainTimeoutInSec',
                constraints: {
                    InclusiveMaximum: 3600,
                    InclusiveMinimum: 1
                },
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ApplicationGatewayBackendHttpSettings = {
    required: false,
    serializedName: 'ApplicationGatewayBackendHttpSettings',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHttpSettings',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            port: {
                required: false,
                serializedName: 'properties.port',
                type: {
                    name: 'Number'
                }
            },
            protocol: {
                required: false,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            cookieBasedAffinity: {
                required: false,
                serializedName: 'properties.cookieBasedAffinity',
                type: {
                    name: 'String'
                }
            },
            requestTimeout: {
                required: false,
                serializedName: 'properties.requestTimeout',
                type: {
                    name: 'Number'
                }
            },
            probe: {
                required: false,
                serializedName: 'properties.probe',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            authenticationCertificates: {
                required: false,
                serializedName: 'properties.authenticationCertificates',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            connectionDraining: {
                required: false,
                serializedName: 'properties.connectionDraining',
                type: {
                    name: 'Composite',
                    className: 'ApplicationGatewayConnectionDraining'
                }
            },
            hostName: {
                required: false,
                serializedName: 'properties.hostName',
                type: {
                    name: 'String'
                }
            },
            pickHostNameFromBackendAddress: {
                required: false,
                serializedName: 'properties.pickHostNameFromBackendAddress',
                type: {
                    name: 'Boolean'
                }
            },
            affinityCookieName: {
                required: false,
                serializedName: 'properties.affinityCookieName',
                type: {
                    name: 'String'
                }
            },
            probeEnabled: {
                required: false,
                serializedName: 'properties.probeEnabled',
                type: {
                    name: 'Boolean'
                }
            },
            path: {
                required: false,
                serializedName: 'properties.path',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayBackendHealthServer = {
    required: false,
    serializedName: 'ApplicationGatewayBackendHealthServer',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHealthServer',
        modelProperties: {
            address: {
                required: false,
                serializedName: 'address',
                type: {
                    name: 'String'
                }
            },
            ipConfiguration: {
                required: false,
                serializedName: 'ipConfiguration',
                type: {
                    name: 'Composite',
                    className: 'NetworkInterfaceIPConfiguration'
                }
            },
            health: {
                required: false,
                serializedName: 'health',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayBackendHealthHttpSettings = {
    required: false,
    serializedName: 'ApplicationGatewayBackendHealthHttpSettings',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHealthHttpSettings',
        modelProperties: {
            backendHttpSettings: {
                required: false,
                serializedName: 'backendHttpSettings',
                type: {
                    name: 'Composite',
                    className: 'ApplicationGatewayBackendHttpSettings'
                }
            },
            servers: {
                required: false,
                serializedName: 'servers',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayBackendHealthServerElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayBackendHealthServer'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewayBackendHealthPool = {
    required: false,
    serializedName: 'ApplicationGatewayBackendHealthPool',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHealthPool',
        modelProperties: {
            backendAddressPool: {
                required: false,
                serializedName: 'backendAddressPool',
                type: {
                    name: 'Composite',
                    className: 'ApplicationGatewayBackendAddressPool'
                }
            },
            backendHttpSettingsCollection: {
                required: false,
                serializedName: 'backendHttpSettingsCollection',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayBackendHealthHttpSettingsElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayBackendHealthHttpSettings'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewayBackendHealth = {
    required: false,
    serializedName: 'ApplicationGatewayBackendHealth',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHealth',
        modelProperties: {
            backendAddressPools: {
                required: false,
                serializedName: 'backendAddressPools',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayBackendHealthPoolElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayBackendHealthPool'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewaySku = {
    required: false,
    serializedName: 'ApplicationGatewaySku',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewaySku',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            tier: {
                required: false,
                serializedName: 'tier',
                type: {
                    name: 'String'
                }
            },
            capacity: {
                required: false,
                serializedName: 'capacity',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ApplicationGatewaySslPolicy = {
    required: false,
    serializedName: 'ApplicationGatewaySslPolicy',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewaySslPolicy',
        modelProperties: {
            disabledSslProtocols: {
                required: false,
                serializedName: 'disabledSslProtocols',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            policyType: {
                required: false,
                serializedName: 'policyType',
                type: {
                    name: 'String'
                }
            },
            policyName: {
                required: false,
                serializedName: 'policyName',
                type: {
                    name: 'String'
                }
            },
            cipherSuites: {
                required: false,
                serializedName: 'cipherSuites',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            minProtocolVersion: {
                required: false,
                serializedName: 'minProtocolVersion',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayIPConfiguration = {
    required: false,
    serializedName: 'ApplicationGatewayIPConfiguration',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayIPConfiguration',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            subnet: {
                required: false,
                serializedName: 'properties.subnet',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayAuthenticationCertificate = {
    required: false,
    serializedName: 'ApplicationGatewayAuthenticationCertificate',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayAuthenticationCertificate',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            data: {
                required: false,
                serializedName: 'properties.data',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewaySslCertificate = {
    required: false,
    serializedName: 'ApplicationGatewaySslCertificate',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewaySslCertificate',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            data: {
                required: false,
                serializedName: 'properties.data',
                type: {
                    name: 'String'
                }
            },
            password: {
                required: false,
                serializedName: 'properties.password',
                type: {
                    name: 'String'
                }
            },
            publicCertData: {
                required: false,
                serializedName: 'properties.publicCertData',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayFrontendIPConfiguration = {
    required: false,
    serializedName: 'ApplicationGatewayFrontendIPConfiguration',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayFrontendIPConfiguration',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            privateIPAddress: {
                required: false,
                serializedName: 'properties.privateIPAddress',
                type: {
                    name: 'String'
                }
            },
            privateIPAllocationMethod: {
                required: false,
                serializedName: 'properties.privateIPAllocationMethod',
                type: {
                    name: 'String'
                }
            },
            subnet: {
                required: false,
                serializedName: 'properties.subnet',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            publicIPAddress: {
                required: false,
                serializedName: 'properties.publicIPAddress',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayFrontendPort = {
    required: false,
    serializedName: 'ApplicationGatewayFrontendPort',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayFrontendPort',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            port: {
                required: false,
                serializedName: 'properties.port',
                type: {
                    name: 'Number'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayHttpListener = {
    required: false,
    serializedName: 'ApplicationGatewayHttpListener',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayHttpListener',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            frontendIPConfiguration: {
                required: false,
                serializedName: 'properties.frontendIPConfiguration',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            frontendPort: {
                required: false,
                serializedName: 'properties.frontendPort',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            protocol: {
                required: false,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            hostName: {
                required: false,
                serializedName: 'properties.hostName',
                type: {
                    name: 'String'
                }
            },
            sslCertificate: {
                required: false,
                serializedName: 'properties.sslCertificate',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            requireServerNameIndication: {
                required: false,
                serializedName: 'properties.requireServerNameIndication',
                type: {
                    name: 'Boolean'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayPathRule = {
    required: false,
    serializedName: 'ApplicationGatewayPathRule',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayPathRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            paths: {
                required: false,
                serializedName: 'properties.paths',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            backendAddressPool: {
                required: false,
                serializedName: 'properties.backendAddressPool',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            backendHttpSettings: {
                required: false,
                serializedName: 'properties.backendHttpSettings',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            redirectConfiguration: {
                required: false,
                serializedName: 'properties.redirectConfiguration',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayProbeHealthResponseMatch = {
    required: false,
    serializedName: 'ApplicationGatewayProbeHealthResponseMatch',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayProbeHealthResponseMatch',
        modelProperties: {
            body: {
                required: false,
                serializedName: 'body',
                type: {
                    name: 'String'
                }
            },
            statusCodes: {
                required: false,
                serializedName: 'statusCodes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewayProbe = {
    required: false,
    serializedName: 'ApplicationGatewayProbe',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayProbe',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            protocol: {
                required: false,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            host: {
                required: false,
                serializedName: 'properties.host',
                type: {
                    name: 'String'
                }
            },
            path: {
                required: false,
                serializedName: 'properties.path',
                type: {
                    name: 'String'
                }
            },
            interval: {
                required: false,
                serializedName: 'properties.interval',
                type: {
                    name: 'Number'
                }
            },
            timeout: {
                required: false,
                serializedName: 'properties.timeout',
                type: {
                    name: 'Number'
                }
            },
            unhealthyThreshold: {
                required: false,
                serializedName: 'properties.unhealthyThreshold',
                type: {
                    name: 'Number'
                }
            },
            pickHostNameFromBackendHttpSettings: {
                required: false,
                serializedName: 'properties.pickHostNameFromBackendHttpSettings',
                type: {
                    name: 'Boolean'
                }
            },
            minServers: {
                required: false,
                serializedName: 'properties.minServers',
                type: {
                    name: 'Number'
                }
            },
            match: {
                required: false,
                serializedName: 'properties.match',
                type: {
                    name: 'Composite',
                    className: 'ApplicationGatewayProbeHealthResponseMatch'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayRequestRoutingRule = {
    required: false,
    serializedName: 'ApplicationGatewayRequestRoutingRule',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayRequestRoutingRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            ruleType: {
                required: false,
                serializedName: 'properties.ruleType',
                type: {
                    name: 'String'
                }
            },
            backendAddressPool: {
                required: false,
                serializedName: 'properties.backendAddressPool',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            backendHttpSettings: {
                required: false,
                serializedName: 'properties.backendHttpSettings',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            httpListener: {
                required: false,
                serializedName: 'properties.httpListener',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            urlPathMap: {
                required: false,
                serializedName: 'properties.urlPathMap',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            redirectConfiguration: {
                required: false,
                serializedName: 'properties.redirectConfiguration',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayRedirectConfiguration = {
    required: false,
    serializedName: 'ApplicationGatewayRedirectConfiguration',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayRedirectConfiguration',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            redirectType: {
                required: false,
                serializedName: 'properties.redirectType',
                type: {
                    name: 'String'
                }
            },
            targetListener: {
                required: false,
                serializedName: 'properties.targetListener',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            targetUrl: {
                required: false,
                serializedName: 'properties.targetUrl',
                type: {
                    name: 'String'
                }
            },
            includePath: {
                required: false,
                serializedName: 'properties.includePath',
                type: {
                    name: 'Boolean'
                }
            },
            includeQueryString: {
                required: false,
                serializedName: 'properties.includeQueryString',
                type: {
                    name: 'Boolean'
                }
            },
            requestRoutingRules: {
                required: false,
                serializedName: 'properties.requestRoutingRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            urlPathMaps: {
                required: false,
                serializedName: 'properties.urlPathMaps',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            pathRules: {
                required: false,
                serializedName: 'properties.pathRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayUrlPathMap = {
    required: false,
    serializedName: 'ApplicationGatewayUrlPathMap',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayUrlPathMap',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            defaultBackendAddressPool: {
                required: false,
                serializedName: 'properties.defaultBackendAddressPool',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            defaultBackendHttpSettings: {
                required: false,
                serializedName: 'properties.defaultBackendHttpSettings',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            defaultRedirectConfiguration: {
                required: false,
                serializedName: 'properties.defaultRedirectConfiguration',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            pathRules: {
                required: false,
                serializedName: 'properties.pathRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayPathRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayPathRule'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayFirewallDisabledRuleGroup = {
    required: false,
    serializedName: 'ApplicationGatewayFirewallDisabledRuleGroup',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayFirewallDisabledRuleGroup',
        modelProperties: {
            ruleGroupName: {
                required: true,
                serializedName: 'ruleGroupName',
                type: {
                    name: 'String'
                }
            },
            rules: {
                required: false,
                serializedName: 'rules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'numberElementType',
                        type: {
                            name: 'Number'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewayWebApplicationFirewallConfiguration = {
    required: false,
    serializedName: 'ApplicationGatewayWebApplicationFirewallConfiguration',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayWebApplicationFirewallConfiguration',
        modelProperties: {
            enabled: {
                required: true,
                serializedName: 'enabled',
                type: {
                    name: 'Boolean'
                }
            },
            firewallMode: {
                required: true,
                serializedName: 'firewallMode',
                type: {
                    name: 'String'
                }
            },
            ruleSetType: {
                required: true,
                serializedName: 'ruleSetType',
                type: {
                    name: 'String'
                }
            },
            ruleSetVersion: {
                required: true,
                serializedName: 'ruleSetVersion',
                type: {
                    name: 'String'
                }
            },
            disabledRuleGroups: {
                required: false,
                serializedName: 'disabledRuleGroups',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayFirewallDisabledRuleGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayFirewallDisabledRuleGroup'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGateway = {
    required: false,
    serializedName: 'ApplicationGateway',
    type: {
        name: 'Composite',
        className: 'ApplicationGateway',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            sku: {
                required: false,
                serializedName: 'properties.sku',
                type: {
                    name: 'Composite',
                    className: 'ApplicationGatewaySku'
                }
            },
            sslPolicy: {
                required: false,
                serializedName: 'properties.sslPolicy',
                type: {
                    name: 'Composite',
                    className: 'ApplicationGatewaySslPolicy'
                }
            },
            operationalState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.operationalState',
                type: {
                    name: 'String'
                }
            },
            gatewayIPConfigurations: {
                required: false,
                serializedName: 'properties.gatewayIPConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayIPConfiguration'
                        }
                    }
                }
            },
            authenticationCertificates: {
                required: false,
                serializedName: 'properties.authenticationCertificates',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayAuthenticationCertificateElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayAuthenticationCertificate'
                        }
                    }
                }
            },
            sslCertificates: {
                required: false,
                serializedName: 'properties.sslCertificates',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewaySslCertificateElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewaySslCertificate'
                        }
                    }
                }
            },
            frontendIPConfigurations: {
                required: false,
                serializedName: 'properties.frontendIPConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayFrontendIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayFrontendIPConfiguration'
                        }
                    }
                }
            },
            frontendPorts: {
                required: false,
                serializedName: 'properties.frontendPorts',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayFrontendPortElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayFrontendPort'
                        }
                    }
                }
            },
            probes: {
                required: false,
                serializedName: 'properties.probes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayProbeElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayProbe'
                        }
                    }
                }
            },
            backendAddressPools: {
                required: false,
                serializedName: 'properties.backendAddressPools',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayBackendAddressPoolElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayBackendAddressPool'
                        }
                    }
                }
            },
            backendHttpSettingsCollection: {
                required: false,
                serializedName: 'properties.backendHttpSettingsCollection',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayBackendHttpSettingsElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayBackendHttpSettings'
                        }
                    }
                }
            },
            httpListeners: {
                required: false,
                serializedName: 'properties.httpListeners',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayHttpListenerElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayHttpListener'
                        }
                    }
                }
            },
            urlPathMaps: {
                required: false,
                serializedName: 'properties.urlPathMaps',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayUrlPathMapElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayUrlPathMap'
                        }
                    }
                }
            },
            requestRoutingRules: {
                required: false,
                serializedName: 'properties.requestRoutingRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayRequestRoutingRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayRequestRoutingRule'
                        }
                    }
                }
            },
            redirectConfigurations: {
                required: false,
                serializedName: 'properties.redirectConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayRedirectConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayRedirectConfiguration'
                        }
                    }
                }
            },
            webApplicationFirewallConfiguration: {
                required: false,
                serializedName: 'properties.webApplicationFirewallConfiguration',
                type: {
                    name: 'Composite',
                    className: 'ApplicationGatewayWebApplicationFirewallConfiguration'
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayFirewallRule = {
    required: false,
    serializedName: 'ApplicationGatewayFirewallRule',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayFirewallRule',
        modelProperties: {
            ruleId: {
                required: true,
                serializedName: 'ruleId',
                type: {
                    name: 'Number'
                }
            },
            description: {
                required: false,
                serializedName: 'description',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayFirewallRuleGroup = {
    required: false,
    serializedName: 'ApplicationGatewayFirewallRuleGroup',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayFirewallRuleGroup',
        modelProperties: {
            ruleGroupName: {
                required: true,
                serializedName: 'ruleGroupName',
                type: {
                    name: 'String'
                }
            },
            description: {
                required: false,
                serializedName: 'description',
                type: {
                    name: 'String'
                }
            },
            rules: {
                required: true,
                serializedName: 'rules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayFirewallRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayFirewallRule'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewayFirewallRuleSet = {
    required: false,
    serializedName: 'ApplicationGatewayFirewallRuleSet',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayFirewallRuleSet',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            ruleSetType: {
                required: true,
                serializedName: 'properties.ruleSetType',
                type: {
                    name: 'String'
                }
            },
            ruleSetVersion: {
                required: true,
                serializedName: 'properties.ruleSetVersion',
                type: {
                    name: 'String'
                }
            },
            ruleGroups: {
                required: true,
                serializedName: 'properties.ruleGroups',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayFirewallRuleGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayFirewallRuleGroup'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewayAvailableWafRuleSetsResult = {
    required: false,
    serializedName: 'ApplicationGatewayAvailableWafRuleSetsResult',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayAvailableWafRuleSetsResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayFirewallRuleSetElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewayFirewallRuleSet'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewayAvailableSslOptions = {
    required: false,
    serializedName: 'ApplicationGatewayAvailableSslOptions',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayAvailableSslOptions',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            predefinedPolicies: {
                required: false,
                serializedName: 'properties.predefinedPolicies',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            defaultPolicy: {
                required: false,
                serializedName: 'properties.defaultPolicy',
                type: {
                    name: 'String'
                }
            },
            availableCipherSuites: {
                required: false,
                serializedName: 'properties.availableCipherSuites',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            availableProtocols: {
                required: false,
                serializedName: 'properties.availableProtocols',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var ApplicationGatewaySslPredefinedPolicy = {
    required: false,
    serializedName: 'ApplicationGatewaySslPredefinedPolicy',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewaySslPredefinedPolicy',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            cipherSuites: {
                required: false,
                serializedName: 'properties.cipherSuites',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            minProtocolVersion: {
                required: false,
                serializedName: 'properties.minProtocolVersion',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var DnsNameAvailabilityResult = {
    required: false,
    serializedName: 'DnsNameAvailabilityResult',
    type: {
        name: 'Composite',
        className: 'DnsNameAvailabilityResult',
        modelProperties: {
            available: {
                required: false,
                serializedName: 'available',
                type: {
                    name: 'Boolean'
                }
            }
        }
    }
};
export var EndpointServiceResult = {
    required: false,
    serializedName: 'EndpointServiceResult',
    type: {
        name: 'Composite',
        className: 'EndpointServiceResult',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitAuthorization = {
    required: false,
    serializedName: 'ExpressRouteCircuitAuthorization',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitAuthorization',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            authorizationKey: {
                required: false,
                serializedName: 'properties.authorizationKey',
                type: {
                    name: 'String'
                }
            },
            authorizationUseStatus: {
                required: false,
                serializedName: 'properties.authorizationUseStatus',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitPeeringConfig = {
    required: false,
    serializedName: 'ExpressRouteCircuitPeeringConfig',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitPeeringConfig',
        modelProperties: {
            advertisedPublicPrefixes: {
                required: false,
                serializedName: 'advertisedPublicPrefixes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            advertisedCommunities: {
                required: false,
                serializedName: 'advertisedCommunities',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            advertisedPublicPrefixesState: {
                required: false,
                serializedName: 'advertisedPublicPrefixesState',
                type: {
                    name: 'String'
                }
            },
            legacyMode: {
                required: false,
                serializedName: 'legacyMode',
                type: {
                    name: 'Number'
                }
            },
            customerASN: {
                required: false,
                serializedName: 'customerASN',
                type: {
                    name: 'Number'
                }
            },
            routingRegistryName: {
                required: false,
                serializedName: 'routingRegistryName',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteFilterRule = {
    required: false,
    serializedName: 'RouteFilterRule',
    type: {
        name: 'Composite',
        className: 'RouteFilterRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            access: {
                required: true,
                serializedName: 'properties.access',
                type: {
                    name: 'String'
                }
            },
            routeFilterRuleType: {
                required: true,
                isConstant: true,
                serializedName: 'properties.routeFilterRuleType',
                defaultValue: 'Community',
                type: {
                    name: 'String'
                }
            },
            communities: {
                required: true,
                serializedName: 'properties.communities',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var ExpressRouteCircuitStats = {
    required: false,
    serializedName: 'ExpressRouteCircuitStats',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitStats',
        modelProperties: {
            primarybytesIn: {
                required: false,
                serializedName: 'primarybytesIn',
                type: {
                    name: 'Number'
                }
            },
            primarybytesOut: {
                required: false,
                serializedName: 'primarybytesOut',
                type: {
                    name: 'Number'
                }
            },
            secondarybytesIn: {
                required: false,
                serializedName: 'secondarybytesIn',
                type: {
                    name: 'Number'
                }
            },
            secondarybytesOut: {
                required: false,
                serializedName: 'secondarybytesOut',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ExpressRouteCircuitPeering = {
    required: false,
    serializedName: 'ExpressRouteCircuitPeering',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitPeering',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            peeringType: {
                required: false,
                serializedName: 'properties.peeringType',
                type: {
                    name: 'String'
                }
            },
            state: {
                required: false,
                serializedName: 'properties.state',
                type: {
                    name: 'String'
                }
            },
            azureASN: {
                required: false,
                serializedName: 'properties.azureASN',
                type: {
                    name: 'Number'
                }
            },
            peerASN: {
                required: false,
                serializedName: 'properties.peerASN',
                type: {
                    name: 'Number'
                }
            },
            primaryPeerAddressPrefix: {
                required: false,
                serializedName: 'properties.primaryPeerAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            secondaryPeerAddressPrefix: {
                required: false,
                serializedName: 'properties.secondaryPeerAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            primaryAzurePort: {
                required: false,
                serializedName: 'properties.primaryAzurePort',
                type: {
                    name: 'String'
                }
            },
            secondaryAzurePort: {
                required: false,
                serializedName: 'properties.secondaryAzurePort',
                type: {
                    name: 'String'
                }
            },
            sharedKey: {
                required: false,
                serializedName: 'properties.sharedKey',
                type: {
                    name: 'String'
                }
            },
            vlanId: {
                required: false,
                serializedName: 'properties.vlanId',
                type: {
                    name: 'Number'
                }
            },
            microsoftPeeringConfig: {
                required: false,
                serializedName: 'properties.microsoftPeeringConfig',
                type: {
                    name: 'Composite',
                    className: 'ExpressRouteCircuitPeeringConfig'
                }
            },
            stats: {
                required: false,
                serializedName: 'properties.stats',
                type: {
                    name: 'Composite',
                    className: 'ExpressRouteCircuitStats'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            gatewayManagerEtag: {
                required: false,
                serializedName: 'properties.gatewayManagerEtag',
                type: {
                    name: 'String'
                }
            },
            lastModifiedBy: {
                required: false,
                serializedName: 'properties.lastModifiedBy',
                type: {
                    name: 'String'
                }
            },
            routeFilter: {
                required: false,
                serializedName: 'properties.routeFilter',
                type: {
                    name: 'Composite',
                    className: 'RouteFilter'
                }
            },
            ipv6PeeringConfig: {
                required: false,
                serializedName: 'properties.ipv6PeeringConfig',
                type: {
                    name: 'Composite',
                    className: 'Ipv6ExpressRouteCircuitPeeringConfig'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteFilter = {
    required: false,
    serializedName: 'RouteFilter',
    type: {
        name: 'Composite',
        className: 'RouteFilter',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            rules: {
                required: false,
                serializedName: 'properties.rules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'RouteFilterRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'RouteFilterRule'
                        }
                    }
                }
            },
            peerings: {
                required: false,
                serializedName: 'properties.peerings',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitPeeringElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitPeering'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var Ipv6ExpressRouteCircuitPeeringConfig = {
    required: false,
    serializedName: 'Ipv6ExpressRouteCircuitPeeringConfig',
    type: {
        name: 'Composite',
        className: 'Ipv6ExpressRouteCircuitPeeringConfig',
        modelProperties: {
            primaryPeerAddressPrefix: {
                required: false,
                serializedName: 'primaryPeerAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            secondaryPeerAddressPrefix: {
                required: false,
                serializedName: 'secondaryPeerAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            microsoftPeeringConfig: {
                required: false,
                serializedName: 'microsoftPeeringConfig',
                type: {
                    name: 'Composite',
                    className: 'ExpressRouteCircuitPeeringConfig'
                }
            },
            routeFilter: {
                required: false,
                serializedName: 'routeFilter',
                type: {
                    name: 'Composite',
                    className: 'RouteFilter'
                }
            },
            state: {
                required: false,
                serializedName: 'state',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitSku = {
    required: false,
    serializedName: 'ExpressRouteCircuitSku',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitSku',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            tier: {
                required: false,
                serializedName: 'tier',
                type: {
                    name: 'String'
                }
            },
            family: {
                required: false,
                serializedName: 'family',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitServiceProviderProperties = {
    required: false,
    serializedName: 'ExpressRouteCircuitServiceProviderProperties',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitServiceProviderProperties',
        modelProperties: {
            serviceProviderName: {
                required: false,
                serializedName: 'serviceProviderName',
                type: {
                    name: 'String'
                }
            },
            peeringLocation: {
                required: false,
                serializedName: 'peeringLocation',
                type: {
                    name: 'String'
                }
            },
            bandwidthInMbps: {
                required: false,
                serializedName: 'bandwidthInMbps',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ExpressRouteCircuit = {
    required: false,
    serializedName: 'ExpressRouteCircuit',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuit',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            sku: {
                required: false,
                serializedName: 'sku',
                type: {
                    name: 'Composite',
                    className: 'ExpressRouteCircuitSku'
                }
            },
            allowClassicOperations: {
                required: false,
                serializedName: 'properties.allowClassicOperations',
                type: {
                    name: 'Boolean'
                }
            },
            circuitProvisioningState: {
                required: false,
                serializedName: 'properties.circuitProvisioningState',
                type: {
                    name: 'String'
                }
            },
            serviceProviderProvisioningState: {
                required: false,
                serializedName: 'properties.serviceProviderProvisioningState',
                type: {
                    name: 'String'
                }
            },
            authorizations: {
                required: false,
                serializedName: 'properties.authorizations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitAuthorizationElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitAuthorization'
                        }
                    }
                }
            },
            peerings: {
                required: false,
                serializedName: 'properties.peerings',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitPeeringElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitPeering'
                        }
                    }
                }
            },
            serviceKey: {
                required: false,
                serializedName: 'properties.serviceKey',
                type: {
                    name: 'String'
                }
            },
            serviceProviderNotes: {
                required: false,
                serializedName: 'properties.serviceProviderNotes',
                type: {
                    name: 'String'
                }
            },
            serviceProviderProperties: {
                required: false,
                serializedName: 'properties.serviceProviderProperties',
                type: {
                    name: 'Composite',
                    className: 'ExpressRouteCircuitServiceProviderProperties'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            gatewayManagerEtag: {
                required: false,
                serializedName: 'properties.gatewayManagerEtag',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitArpTable = {
    required: false,
    serializedName: 'ExpressRouteCircuitArpTable',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitArpTable',
        modelProperties: {
            age: {
                required: false,
                serializedName: 'age',
                type: {
                    name: 'Number'
                }
            },
            interfaceProperty: {
                required: false,
                serializedName: 'interface',
                type: {
                    name: 'String'
                }
            },
            ipAddress: {
                required: false,
                serializedName: 'ipAddress',
                type: {
                    name: 'String'
                }
            },
            macAddress: {
                required: false,
                serializedName: 'macAddress',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitsArpTableListResult = {
    required: false,
    serializedName: 'ExpressRouteCircuitsArpTableListResult',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitsArpTableListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitArpTableElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitArpTable'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitRoutesTable = {
    required: false,
    serializedName: 'ExpressRouteCircuitRoutesTable',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitRoutesTable',
        modelProperties: {
            network: {
                required: false,
                serializedName: 'network',
                type: {
                    name: 'String'
                }
            },
            nextHop: {
                required: false,
                serializedName: 'nextHop',
                type: {
                    name: 'String'
                }
            },
            locPrf: {
                required: false,
                serializedName: 'locPrf',
                type: {
                    name: 'String'
                }
            },
            weight: {
                required: false,
                serializedName: 'weight',
                type: {
                    name: 'Number'
                }
            },
            path: {
                required: false,
                serializedName: 'path',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitsRoutesTableListResult = {
    required: false,
    serializedName: 'ExpressRouteCircuitsRoutesTableListResult',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitsRoutesTableListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitRoutesTableElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitRoutesTable'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitRoutesTableSummary = {
    required: false,
    serializedName: 'ExpressRouteCircuitRoutesTableSummary',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitRoutesTableSummary',
        modelProperties: {
            neighbor: {
                required: false,
                serializedName: 'neighbor',
                type: {
                    name: 'String'
                }
            },
            v: {
                required: false,
                serializedName: 'v',
                type: {
                    name: 'Number'
                }
            },
            as: {
                required: false,
                serializedName: 'as',
                type: {
                    name: 'Number'
                }
            },
            upDown: {
                required: false,
                serializedName: 'upDown',
                type: {
                    name: 'String'
                }
            },
            statePfxRcd: {
                required: false,
                serializedName: 'statePfxRcd',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitsRoutesTableSummaryListResult = {
    required: false,
    serializedName: 'ExpressRouteCircuitsRoutesTableSummaryListResult',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitsRoutesTableSummaryListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitRoutesTableSummaryElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitRoutesTableSummary'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteServiceProviderBandwidthsOffered = {
    required: false,
    serializedName: 'ExpressRouteServiceProviderBandwidthsOffered',
    type: {
        name: 'Composite',
        className: 'ExpressRouteServiceProviderBandwidthsOffered',
        modelProperties: {
            offerName: {
                required: false,
                serializedName: 'offerName',
                type: {
                    name: 'String'
                }
            },
            valueInMbps: {
                required: false,
                serializedName: 'valueInMbps',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ExpressRouteServiceProvider = {
    required: false,
    serializedName: 'ExpressRouteServiceProvider',
    type: {
        name: 'Composite',
        className: 'ExpressRouteServiceProvider',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            peeringLocations: {
                required: false,
                serializedName: 'properties.peeringLocations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            bandwidthsOffered: {
                required: false,
                serializedName: 'properties.bandwidthsOffered',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteServiceProviderBandwidthsOfferedElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteServiceProviderBandwidthsOffered'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancerSku = {
    required: false,
    serializedName: 'LoadBalancerSku',
    type: {
        name: 'Composite',
        className: 'LoadBalancerSku',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var FrontendIPConfiguration = {
    required: false,
    serializedName: 'FrontendIPConfiguration',
    type: {
        name: 'Composite',
        className: 'FrontendIPConfiguration',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            inboundNatRules: {
                required: false,
                readOnly: true,
                serializedName: 'properties.inboundNatRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            inboundNatPools: {
                required: false,
                readOnly: true,
                serializedName: 'properties.inboundNatPools',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            outboundNatRules: {
                required: false,
                readOnly: true,
                serializedName: 'properties.outboundNatRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            loadBalancingRules: {
                required: false,
                readOnly: true,
                serializedName: 'properties.loadBalancingRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            privateIPAddress: {
                required: false,
                serializedName: 'properties.privateIPAddress',
                type: {
                    name: 'String'
                }
            },
            privateIPAllocationMethod: {
                required: false,
                serializedName: 'properties.privateIPAllocationMethod',
                type: {
                    name: 'String'
                }
            },
            subnet: {
                required: false,
                serializedName: 'properties.subnet',
                type: {
                    name: 'Composite',
                    className: 'Subnet'
                }
            },
            publicIPAddress: {
                required: false,
                serializedName: 'properties.publicIPAddress',
                type: {
                    name: 'Composite',
                    className: 'PublicIPAddress'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            zones: {
                required: false,
                serializedName: 'zones',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var LoadBalancingRule = {
    required: false,
    serializedName: 'LoadBalancingRule',
    type: {
        name: 'Composite',
        className: 'LoadBalancingRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            frontendIPConfiguration: {
                required: false,
                serializedName: 'properties.frontendIPConfiguration',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            backendAddressPool: {
                required: false,
                serializedName: 'properties.backendAddressPool',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            probe: {
                required: false,
                serializedName: 'properties.probe',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            protocol: {
                required: true,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            loadDistribution: {
                required: false,
                serializedName: 'properties.loadDistribution',
                type: {
                    name: 'String'
                }
            },
            frontendPort: {
                required: true,
                serializedName: 'properties.frontendPort',
                type: {
                    name: 'Number'
                }
            },
            backendPort: {
                required: false,
                serializedName: 'properties.backendPort',
                type: {
                    name: 'Number'
                }
            },
            idleTimeoutInMinutes: {
                required: false,
                serializedName: 'properties.idleTimeoutInMinutes',
                type: {
                    name: 'Number'
                }
            },
            enableFloatingIP: {
                required: false,
                serializedName: 'properties.enableFloatingIP',
                type: {
                    name: 'Boolean'
                }
            },
            disableOutboundSnat: {
                required: false,
                serializedName: 'properties.disableOutboundSnat',
                type: {
                    name: 'Boolean'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var Probe = {
    required: false,
    serializedName: 'Probe',
    type: {
        name: 'Composite',
        className: 'Probe',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            loadBalancingRules: {
                required: false,
                readOnly: true,
                serializedName: 'properties.loadBalancingRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            protocol: {
                required: true,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            port: {
                required: true,
                serializedName: 'properties.port',
                type: {
                    name: 'Number'
                }
            },
            intervalInSeconds: {
                required: false,
                serializedName: 'properties.intervalInSeconds',
                type: {
                    name: 'Number'
                }
            },
            numberOfProbes: {
                required: false,
                serializedName: 'properties.numberOfProbes',
                type: {
                    name: 'Number'
                }
            },
            requestPath: {
                required: false,
                serializedName: 'properties.requestPath',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var InboundNatPool = {
    required: false,
    serializedName: 'InboundNatPool',
    type: {
        name: 'Composite',
        className: 'InboundNatPool',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            frontendIPConfiguration: {
                required: false,
                serializedName: 'properties.frontendIPConfiguration',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            protocol: {
                required: true,
                serializedName: 'properties.protocol',
                type: {
                    name: 'String'
                }
            },
            frontendPortRangeStart: {
                required: true,
                serializedName: 'properties.frontendPortRangeStart',
                type: {
                    name: 'Number'
                }
            },
            frontendPortRangeEnd: {
                required: true,
                serializedName: 'properties.frontendPortRangeEnd',
                type: {
                    name: 'Number'
                }
            },
            backendPort: {
                required: true,
                serializedName: 'properties.backendPort',
                type: {
                    name: 'Number'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var OutboundNatRule = {
    required: false,
    serializedName: 'OutboundNatRule',
    type: {
        name: 'Composite',
        className: 'OutboundNatRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            allocatedOutboundPorts: {
                required: false,
                serializedName: 'properties.allocatedOutboundPorts',
                type: {
                    name: 'Number'
                }
            },
            frontendIPConfigurations: {
                required: false,
                serializedName: 'properties.frontendIPConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SubResource'
                        }
                    }
                }
            },
            backendAddressPool: {
                required: true,
                serializedName: 'properties.backendAddressPool',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancer = {
    required: false,
    serializedName: 'LoadBalancer',
    type: {
        name: 'Composite',
        className: 'LoadBalancer',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            sku: {
                required: false,
                serializedName: 'sku',
                type: {
                    name: 'Composite',
                    className: 'LoadBalancerSku'
                }
            },
            frontendIPConfigurations: {
                required: false,
                serializedName: 'properties.frontendIPConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'FrontendIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'FrontendIPConfiguration'
                        }
                    }
                }
            },
            backendAddressPools: {
                required: false,
                serializedName: 'properties.backendAddressPools',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'BackendAddressPoolElementType',
                        type: {
                            name: 'Composite',
                            className: 'BackendAddressPool'
                        }
                    }
                }
            },
            loadBalancingRules: {
                required: false,
                serializedName: 'properties.loadBalancingRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'LoadBalancingRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'LoadBalancingRule'
                        }
                    }
                }
            },
            probes: {
                required: false,
                serializedName: 'properties.probes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ProbeElementType',
                        type: {
                            name: 'Composite',
                            className: 'Probe'
                        }
                    }
                }
            },
            inboundNatRules: {
                required: false,
                serializedName: 'properties.inboundNatRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'InboundNatRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'InboundNatRule'
                        }
                    }
                }
            },
            inboundNatPools: {
                required: false,
                serializedName: 'properties.inboundNatPools',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'InboundNatPoolElementType',
                        type: {
                            name: 'Composite',
                            className: 'InboundNatPool'
                        }
                    }
                }
            },
            outboundNatRules: {
                required: false,
                serializedName: 'properties.outboundNatRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'OutboundNatRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'OutboundNatRule'
                        }
                    }
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ErrorDetails = {
    required: false,
    serializedName: 'ErrorDetails',
    type: {
        name: 'Composite',
        className: 'ErrorDetails',
        modelProperties: {
            code: {
                required: false,
                serializedName: 'code',
                type: {
                    name: 'String'
                }
            },
            target: {
                required: false,
                serializedName: 'target',
                type: {
                    name: 'String'
                }
            },
            message: {
                required: false,
                serializedName: 'message',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ErrorModel = {
    required: false,
    serializedName: 'Error',
    type: {
        name: 'Composite',
        className: 'ErrorModel',
        modelProperties: {
            code: {
                required: false,
                serializedName: 'code',
                type: {
                    name: 'String'
                }
            },
            message: {
                required: false,
                serializedName: 'message',
                type: {
                    name: 'String'
                }
            },
            target: {
                required: false,
                serializedName: 'target',
                type: {
                    name: 'String'
                }
            },
            details: {
                required: false,
                serializedName: 'details',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ErrorDetailsElementType',
                        type: {
                            name: 'Composite',
                            className: 'ErrorDetails'
                        }
                    }
                }
            },
            innerError: {
                required: false,
                serializedName: 'innerError',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var AzureAsyncOperationResult = {
    required: false,
    serializedName: 'AzureAsyncOperationResult',
    type: {
        name: 'Composite',
        className: 'AzureAsyncOperationResult',
        modelProperties: {
            status: {
                required: false,
                serializedName: 'status',
                type: {
                    name: 'String'
                }
            },
            error: {
                required: false,
                serializedName: 'error',
                type: {
                    name: 'Composite',
                    className: 'ErrorModel'
                }
            }
        }
    }
};
export var EffectiveNetworkSecurityGroupAssociation = {
    required: false,
    serializedName: 'EffectiveNetworkSecurityGroupAssociation',
    type: {
        name: 'Composite',
        className: 'EffectiveNetworkSecurityGroupAssociation',
        modelProperties: {
            subnet: {
                required: false,
                serializedName: 'subnet',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            networkInterface: {
                required: false,
                serializedName: 'networkInterface',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            }
        }
    }
};
export var EffectiveNetworkSecurityRule = {
    required: false,
    serializedName: 'EffectiveNetworkSecurityRule',
    type: {
        name: 'Composite',
        className: 'EffectiveNetworkSecurityRule',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            protocol: {
                required: false,
                serializedName: 'protocol',
                type: {
                    name: 'String'
                }
            },
            sourcePortRange: {
                required: false,
                serializedName: 'sourcePortRange',
                type: {
                    name: 'String'
                }
            },
            destinationPortRange: {
                required: false,
                serializedName: 'destinationPortRange',
                type: {
                    name: 'String'
                }
            },
            sourcePortRanges: {
                required: false,
                serializedName: 'sourcePortRanges',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            destinationPortRanges: {
                required: false,
                serializedName: 'destinationPortRanges',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            sourceAddressPrefix: {
                required: false,
                serializedName: 'sourceAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            destinationAddressPrefix: {
                required: false,
                serializedName: 'destinationAddressPrefix',
                type: {
                    name: 'String'
                }
            },
            sourceAddressPrefixes: {
                required: false,
                serializedName: 'sourceAddressPrefixes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            destinationAddressPrefixes: {
                required: false,
                serializedName: 'destinationAddressPrefixes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            expandedSourceAddressPrefix: {
                required: false,
                serializedName: 'expandedSourceAddressPrefix',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            expandedDestinationAddressPrefix: {
                required: false,
                serializedName: 'expandedDestinationAddressPrefix',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            access: {
                required: false,
                serializedName: 'access',
                type: {
                    name: 'String'
                }
            },
            priority: {
                required: false,
                serializedName: 'priority',
                type: {
                    name: 'Number'
                }
            },
            direction: {
                required: false,
                serializedName: 'direction',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var EffectiveNetworkSecurityGroup = {
    required: false,
    serializedName: 'EffectiveNetworkSecurityGroup',
    type: {
        name: 'Composite',
        className: 'EffectiveNetworkSecurityGroup',
        modelProperties: {
            networkSecurityGroup: {
                required: false,
                serializedName: 'networkSecurityGroup',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            association: {
                required: false,
                serializedName: 'association',
                type: {
                    name: 'Composite',
                    className: 'EffectiveNetworkSecurityGroupAssociation'
                }
            },
            effectiveSecurityRules: {
                required: false,
                serializedName: 'effectiveSecurityRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'EffectiveNetworkSecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'EffectiveNetworkSecurityRule'
                        }
                    }
                }
            },
            tagMap: {
                required: false,
                serializedName: 'tagMap',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'ArrayElementType',
                        type: {
                            name: 'Sequence',
                            element: {
                                required: false,
                                serializedName: 'stringElementType',
                                type: {
                                    name: 'String'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
export var EffectiveNetworkSecurityGroupListResult = {
    required: false,
    serializedName: 'EffectiveNetworkSecurityGroupListResult',
    type: {
        name: 'Composite',
        className: 'EffectiveNetworkSecurityGroupListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'EffectiveNetworkSecurityGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'EffectiveNetworkSecurityGroup'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var EffectiveRoute = {
    required: false,
    serializedName: 'EffectiveRoute',
    type: {
        name: 'Composite',
        className: 'EffectiveRoute',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            source: {
                required: false,
                serializedName: 'source',
                type: {
                    name: 'String'
                }
            },
            state: {
                required: false,
                serializedName: 'state',
                type: {
                    name: 'String'
                }
            },
            addressPrefix: {
                required: false,
                serializedName: 'addressPrefix',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            nextHopIpAddress: {
                required: false,
                serializedName: 'nextHopIpAddress',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            nextHopType: {
                required: false,
                serializedName: 'nextHopType',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var EffectiveRouteListResult = {
    required: false,
    serializedName: 'EffectiveRouteListResult',
    type: {
        name: 'Composite',
        className: 'EffectiveRouteListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'EffectiveRouteElementType',
                        type: {
                            name: 'Composite',
                            className: 'EffectiveRoute'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkWatcher = {
    required: false,
    serializedName: 'NetworkWatcher',
    type: {
        name: 'Composite',
        className: 'NetworkWatcher',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var TopologyParameters = {
    required: false,
    serializedName: 'TopologyParameters',
    type: {
        name: 'Composite',
        className: 'TopologyParameters',
        modelProperties: {
            targetResourceGroupName: {
                required: true,
                serializedName: 'targetResourceGroupName',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var TopologyAssociation = {
    required: false,
    serializedName: 'TopologyAssociation',
    type: {
        name: 'Composite',
        className: 'TopologyAssociation',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            resourceId: {
                required: false,
                serializedName: 'resourceId',
                type: {
                    name: 'String'
                }
            },
            associationType: {
                required: false,
                serializedName: 'associationType',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var TopologyResource = {
    required: false,
    serializedName: 'TopologyResource',
    type: {
        name: 'Composite',
        className: 'TopologyResource',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            associations: {
                required: false,
                serializedName: 'associations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'TopologyAssociationElementType',
                        type: {
                            name: 'Composite',
                            className: 'TopologyAssociation'
                        }
                    }
                }
            }
        }
    }
};
export var Topology = {
    required: false,
    serializedName: 'Topology',
    type: {
        name: 'Composite',
        className: 'Topology',
        modelProperties: {
            id: {
                required: false,
                readOnly: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            createdDateTime: {
                required: false,
                readOnly: true,
                serializedName: 'createdDateTime',
                type: {
                    name: 'DateTime'
                }
            },
            lastModified: {
                required: false,
                readOnly: true,
                serializedName: 'lastModified',
                type: {
                    name: 'DateTime'
                }
            },
            resources: {
                required: false,
                serializedName: 'resources',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'TopologyResourceElementType',
                        type: {
                            name: 'Composite',
                            className: 'TopologyResource'
                        }
                    }
                }
            }
        }
    }
};
export var VerificationIPFlowParameters = {
    required: false,
    serializedName: 'VerificationIPFlowParameters',
    type: {
        name: 'Composite',
        className: 'VerificationIPFlowParameters',
        modelProperties: {
            targetResourceId: {
                required: true,
                serializedName: 'targetResourceId',
                type: {
                    name: 'String'
                }
            },
            direction: {
                required: true,
                serializedName: 'direction',
                type: {
                    name: 'String'
                }
            },
            protocol: {
                required: true,
                serializedName: 'protocol',
                type: {
                    name: 'String'
                }
            },
            localPort: {
                required: true,
                serializedName: 'localPort',
                type: {
                    name: 'String'
                }
            },
            remotePort: {
                required: true,
                serializedName: 'remotePort',
                type: {
                    name: 'String'
                }
            },
            localIPAddress: {
                required: true,
                serializedName: 'localIPAddress',
                type: {
                    name: 'String'
                }
            },
            remoteIPAddress: {
                required: true,
                serializedName: 'remoteIPAddress',
                type: {
                    name: 'String'
                }
            },
            targetNicResourceId: {
                required: false,
                serializedName: 'targetNicResourceId',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VerificationIPFlowResult = {
    required: false,
    serializedName: 'VerificationIPFlowResult',
    type: {
        name: 'Composite',
        className: 'VerificationIPFlowResult',
        modelProperties: {
            access: {
                required: false,
                serializedName: 'access',
                type: {
                    name: 'String'
                }
            },
            ruleName: {
                required: false,
                serializedName: 'ruleName',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NextHopParameters = {
    required: false,
    serializedName: 'NextHopParameters',
    type: {
        name: 'Composite',
        className: 'NextHopParameters',
        modelProperties: {
            targetResourceId: {
                required: true,
                serializedName: 'targetResourceId',
                type: {
                    name: 'String'
                }
            },
            sourceIPAddress: {
                required: true,
                serializedName: 'sourceIPAddress',
                type: {
                    name: 'String'
                }
            },
            destinationIPAddress: {
                required: true,
                serializedName: 'destinationIPAddress',
                type: {
                    name: 'String'
                }
            },
            targetNicResourceId: {
                required: false,
                serializedName: 'targetNicResourceId',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NextHopResult = {
    required: false,
    serializedName: 'NextHopResult',
    type: {
        name: 'Composite',
        className: 'NextHopResult',
        modelProperties: {
            nextHopType: {
                required: false,
                serializedName: 'nextHopType',
                type: {
                    name: 'String'
                }
            },
            nextHopIpAddress: {
                required: false,
                serializedName: 'nextHopIpAddress',
                type: {
                    name: 'String'
                }
            },
            routeTableId: {
                required: false,
                serializedName: 'routeTableId',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var SecurityGroupViewParameters = {
    required: false,
    serializedName: 'SecurityGroupViewParameters',
    type: {
        name: 'Composite',
        className: 'SecurityGroupViewParameters',
        modelProperties: {
            targetResourceId: {
                required: true,
                serializedName: 'targetResourceId',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfaceAssociation = {
    required: false,
    serializedName: 'NetworkInterfaceAssociation',
    type: {
        name: 'Composite',
        className: 'NetworkInterfaceAssociation',
        modelProperties: {
            id: {
                required: false,
                readOnly: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            securityRules: {
                required: false,
                serializedName: 'securityRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'SecurityRule'
                        }
                    }
                }
            }
        }
    }
};
export var SubnetAssociation = {
    required: false,
    serializedName: 'SubnetAssociation',
    type: {
        name: 'Composite',
        className: 'SubnetAssociation',
        modelProperties: {
            id: {
                required: false,
                readOnly: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            securityRules: {
                required: false,
                serializedName: 'securityRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'SecurityRule'
                        }
                    }
                }
            }
        }
    }
};
export var SecurityRuleAssociations = {
    required: false,
    serializedName: 'SecurityRuleAssociations',
    type: {
        name: 'Composite',
        className: 'SecurityRuleAssociations',
        modelProperties: {
            networkInterfaceAssociation: {
                required: false,
                serializedName: 'networkInterfaceAssociation',
                type: {
                    name: 'Composite',
                    className: 'NetworkInterfaceAssociation'
                }
            },
            subnetAssociation: {
                required: false,
                serializedName: 'subnetAssociation',
                type: {
                    name: 'Composite',
                    className: 'SubnetAssociation'
                }
            },
            defaultSecurityRules: {
                required: false,
                serializedName: 'defaultSecurityRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'SecurityRule'
                        }
                    }
                }
            },
            effectiveSecurityRules: {
                required: false,
                serializedName: 'effectiveSecurityRules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'EffectiveNetworkSecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'EffectiveNetworkSecurityRule'
                        }
                    }
                }
            }
        }
    }
};
export var SecurityGroupNetworkInterface = {
    required: false,
    serializedName: 'SecurityGroupNetworkInterface',
    type: {
        name: 'Composite',
        className: 'SecurityGroupNetworkInterface',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            securityRuleAssociations: {
                required: false,
                serializedName: 'securityRuleAssociations',
                type: {
                    name: 'Composite',
                    className: 'SecurityRuleAssociations'
                }
            }
        }
    }
};
export var SecurityGroupViewResult = {
    required: false,
    serializedName: 'SecurityGroupViewResult',
    type: {
        name: 'Composite',
        className: 'SecurityGroupViewResult',
        modelProperties: {
            networkInterfaces: {
                required: false,
                serializedName: 'networkInterfaces',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SecurityGroupNetworkInterfaceElementType',
                        type: {
                            name: 'Composite',
                            className: 'SecurityGroupNetworkInterface'
                        }
                    }
                }
            }
        }
    }
};
export var PacketCaptureStorageLocation = {
    required: false,
    serializedName: 'PacketCaptureStorageLocation',
    type: {
        name: 'Composite',
        className: 'PacketCaptureStorageLocation',
        modelProperties: {
            storageId: {
                required: false,
                serializedName: 'storageId',
                type: {
                    name: 'String'
                }
            },
            storagePath: {
                required: false,
                serializedName: 'storagePath',
                type: {
                    name: 'String'
                }
            },
            filePath: {
                required: false,
                serializedName: 'filePath',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PacketCaptureFilter = {
    required: false,
    serializedName: 'PacketCaptureFilter',
    type: {
        name: 'Composite',
        className: 'PacketCaptureFilter',
        modelProperties: {
            protocol: {
                required: false,
                serializedName: 'protocol',
                defaultValue: 'Any',
                type: {
                    name: 'String'
                }
            },
            localIPAddress: {
                required: false,
                serializedName: 'localIPAddress',
                type: {
                    name: 'String'
                }
            },
            remoteIPAddress: {
                required: false,
                serializedName: 'remoteIPAddress',
                type: {
                    name: 'String'
                }
            },
            localPort: {
                required: false,
                serializedName: 'localPort',
                type: {
                    name: 'String'
                }
            },
            remotePort: {
                required: false,
                serializedName: 'remotePort',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PacketCaptureParameters = {
    required: false,
    serializedName: 'PacketCaptureParameters',
    type: {
        name: 'Composite',
        className: 'PacketCaptureParameters',
        modelProperties: {
            target: {
                required: true,
                serializedName: 'target',
                type: {
                    name: 'String'
                }
            },
            bytesToCapturePerPacket: {
                required: false,
                serializedName: 'bytesToCapturePerPacket',
                defaultValue: 0,
                type: {
                    name: 'Number'
                }
            },
            totalBytesPerSession: {
                required: false,
                serializedName: 'totalBytesPerSession',
                defaultValue: 1073741824,
                type: {
                    name: 'Number'
                }
            },
            timeLimitInSeconds: {
                required: false,
                serializedName: 'timeLimitInSeconds',
                defaultValue: 18000,
                type: {
                    name: 'Number'
                }
            },
            storageLocation: {
                required: true,
                serializedName: 'storageLocation',
                type: {
                    name: 'Composite',
                    className: 'PacketCaptureStorageLocation'
                }
            },
            filters: {
                required: false,
                serializedName: 'filters',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'PacketCaptureFilterElementType',
                        type: {
                            name: 'Composite',
                            className: 'PacketCaptureFilter'
                        }
                    }
                }
            }
        }
    }
};
export var PacketCapture = {
    required: false,
    serializedName: 'PacketCapture',
    type: {
        name: 'Composite',
        className: 'PacketCapture',
        modelProperties: {
            target: {
                required: true,
                serializedName: 'properties.target',
                type: {
                    name: 'String'
                }
            },
            bytesToCapturePerPacket: {
                required: false,
                serializedName: 'properties.bytesToCapturePerPacket',
                defaultValue: 0,
                type: {
                    name: 'Number'
                }
            },
            totalBytesPerSession: {
                required: false,
                serializedName: 'properties.totalBytesPerSession',
                defaultValue: 1073741824,
                type: {
                    name: 'Number'
                }
            },
            timeLimitInSeconds: {
                required: false,
                serializedName: 'properties.timeLimitInSeconds',
                defaultValue: 18000,
                type: {
                    name: 'Number'
                }
            },
            storageLocation: {
                required: true,
                serializedName: 'properties.storageLocation',
                type: {
                    name: 'Composite',
                    className: 'PacketCaptureStorageLocation'
                }
            },
            filters: {
                required: false,
                serializedName: 'properties.filters',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'PacketCaptureFilterElementType',
                        type: {
                            name: 'Composite',
                            className: 'PacketCaptureFilter'
                        }
                    }
                }
            }
        }
    }
};
export var PacketCaptureResult = {
    required: false,
    serializedName: 'PacketCaptureResult',
    type: {
        name: 'Composite',
        className: 'PacketCaptureResult',
        modelProperties: {
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            id: {
                required: false,
                readOnly: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                defaultValue: 'A unique read-only string that changes whenever the resource is updated.',
                type: {
                    name: 'String'
                }
            },
            target: {
                required: true,
                serializedName: 'properties.target',
                type: {
                    name: 'String'
                }
            },
            bytesToCapturePerPacket: {
                required: false,
                serializedName: 'properties.bytesToCapturePerPacket',
                defaultValue: 0,
                type: {
                    name: 'Number'
                }
            },
            totalBytesPerSession: {
                required: false,
                serializedName: 'properties.totalBytesPerSession',
                defaultValue: 1073741824,
                type: {
                    name: 'Number'
                }
            },
            timeLimitInSeconds: {
                required: false,
                serializedName: 'properties.timeLimitInSeconds',
                defaultValue: 18000,
                type: {
                    name: 'Number'
                }
            },
            storageLocation: {
                required: true,
                serializedName: 'properties.storageLocation',
                type: {
                    name: 'Composite',
                    className: 'PacketCaptureStorageLocation'
                }
            },
            filters: {
                required: false,
                serializedName: 'properties.filters',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'PacketCaptureFilterElementType',
                        type: {
                            name: 'Composite',
                            className: 'PacketCaptureFilter'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PacketCaptureQueryStatusResult = {
    required: false,
    serializedName: 'PacketCaptureQueryStatusResult',
    type: {
        name: 'Composite',
        className: 'PacketCaptureQueryStatusResult',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            captureStartTime: {
                required: false,
                serializedName: 'captureStartTime',
                type: {
                    name: 'DateTime'
                }
            },
            packetCaptureStatus: {
                required: false,
                serializedName: 'packetCaptureStatus',
                type: {
                    name: 'String'
                }
            },
            stopReason: {
                required: false,
                serializedName: 'stopReason',
                type: {
                    name: 'String'
                }
            },
            packetCaptureError: {
                required: false,
                serializedName: 'packetCaptureError',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var TroubleshootingParameters = {
    required: false,
    serializedName: 'TroubleshootingParameters',
    type: {
        name: 'Composite',
        className: 'TroubleshootingParameters',
        modelProperties: {
            targetResourceId: {
                required: true,
                serializedName: 'targetResourceId',
                type: {
                    name: 'String'
                }
            },
            storageId: {
                required: true,
                serializedName: 'properties.storageId',
                type: {
                    name: 'String'
                }
            },
            storagePath: {
                required: true,
                serializedName: 'properties.storagePath',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var QueryTroubleshootingParameters = {
    required: false,
    serializedName: 'QueryTroubleshootingParameters',
    type: {
        name: 'Composite',
        className: 'QueryTroubleshootingParameters',
        modelProperties: {
            targetResourceId: {
                required: true,
                serializedName: 'targetResourceId',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var TroubleshootingRecommendedActions = {
    required: false,
    serializedName: 'TroubleshootingRecommendedActions',
    type: {
        name: 'Composite',
        className: 'TroubleshootingRecommendedActions',
        modelProperties: {
            actionId: {
                required: false,
                serializedName: 'actionId',
                type: {
                    name: 'String'
                }
            },
            actionText: {
                required: false,
                serializedName: 'actionText',
                type: {
                    name: 'String'
                }
            },
            actionUri: {
                required: false,
                serializedName: 'actionUri',
                type: {
                    name: 'String'
                }
            },
            actionUriText: {
                required: false,
                serializedName: 'actionUriText',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var TroubleshootingDetails = {
    required: false,
    serializedName: 'TroubleshootingDetails',
    type: {
        name: 'Composite',
        className: 'TroubleshootingDetails',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            reasonType: {
                required: false,
                serializedName: 'reasonType',
                type: {
                    name: 'String'
                }
            },
            summary: {
                required: false,
                serializedName: 'summary',
                type: {
                    name: 'String'
                }
            },
            detail: {
                required: false,
                serializedName: 'detail',
                type: {
                    name: 'String'
                }
            },
            recommendedActions: {
                required: false,
                serializedName: 'recommendedActions',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'TroubleshootingRecommendedActionsElementType',
                        type: {
                            name: 'Composite',
                            className: 'TroubleshootingRecommendedActions'
                        }
                    }
                }
            }
        }
    }
};
export var TroubleshootingResult = {
    required: false,
    serializedName: 'TroubleshootingResult',
    type: {
        name: 'Composite',
        className: 'TroubleshootingResult',
        modelProperties: {
            startTime: {
                required: false,
                serializedName: 'startTime',
                type: {
                    name: 'DateTime'
                }
            },
            endTime: {
                required: false,
                serializedName: 'endTime',
                type: {
                    name: 'DateTime'
                }
            },
            code: {
                required: false,
                serializedName: 'code',
                type: {
                    name: 'String'
                }
            },
            results: {
                required: false,
                serializedName: 'results',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'TroubleshootingDetailsElementType',
                        type: {
                            name: 'Composite',
                            className: 'TroubleshootingDetails'
                        }
                    }
                }
            }
        }
    }
};
export var RetentionPolicyParameters = {
    required: false,
    serializedName: 'RetentionPolicyParameters',
    type: {
        name: 'Composite',
        className: 'RetentionPolicyParameters',
        modelProperties: {
            days: {
                required: false,
                serializedName: 'days',
                defaultValue: 0,
                type: {
                    name: 'Number'
                }
            },
            enabled: {
                required: false,
                serializedName: 'enabled',
                defaultValue: false,
                type: {
                    name: 'Boolean'
                }
            }
        }
    }
};
export var FlowLogStatusParameters = {
    required: false,
    serializedName: 'FlowLogStatusParameters',
    type: {
        name: 'Composite',
        className: 'FlowLogStatusParameters',
        modelProperties: {
            targetResourceId: {
                required: true,
                serializedName: 'targetResourceId',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var FlowLogInformation = {
    required: false,
    serializedName: 'FlowLogInformation',
    type: {
        name: 'Composite',
        className: 'FlowLogInformation',
        modelProperties: {
            targetResourceId: {
                required: true,
                serializedName: 'targetResourceId',
                type: {
                    name: 'String'
                }
            },
            storageId: {
                required: true,
                serializedName: 'properties.storageId',
                type: {
                    name: 'String'
                }
            },
            enabled: {
                required: true,
                serializedName: 'properties.enabled',
                type: {
                    name: 'Boolean'
                }
            },
            retentionPolicy: {
                required: false,
                serializedName: 'properties.retentionPolicy',
                type: {
                    name: 'Composite',
                    className: 'RetentionPolicyParameters'
                }
            }
        }
    }
};
export var ConnectivitySource = {
    required: false,
    serializedName: 'ConnectivitySource',
    type: {
        name: 'Composite',
        className: 'ConnectivitySource',
        modelProperties: {
            resourceId: {
                required: true,
                serializedName: 'resourceId',
                type: {
                    name: 'String'
                }
            },
            port: {
                required: false,
                serializedName: 'port',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ConnectivityDestination = {
    required: false,
    serializedName: 'ConnectivityDestination',
    type: {
        name: 'Composite',
        className: 'ConnectivityDestination',
        modelProperties: {
            resourceId: {
                required: false,
                serializedName: 'resourceId',
                type: {
                    name: 'String'
                }
            },
            address: {
                required: false,
                serializedName: 'address',
                type: {
                    name: 'String'
                }
            },
            port: {
                required: false,
                serializedName: 'port',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ConnectivityParameters = {
    required: false,
    serializedName: 'ConnectivityParameters',
    type: {
        name: 'Composite',
        className: 'ConnectivityParameters',
        modelProperties: {
            source: {
                required: true,
                serializedName: 'source',
                type: {
                    name: 'Composite',
                    className: 'ConnectivitySource'
                }
            },
            destination: {
                required: true,
                serializedName: 'destination',
                type: {
                    name: 'Composite',
                    className: 'ConnectivityDestination'
                }
            }
        }
    }
};
export var ConnectivityIssue = {
    required: false,
    serializedName: 'ConnectivityIssue',
    type: {
        name: 'Composite',
        className: 'ConnectivityIssue',
        modelProperties: {
            origin: {
                required: false,
                readOnly: true,
                serializedName: 'origin',
                type: {
                    name: 'String'
                }
            },
            severity: {
                required: false,
                readOnly: true,
                serializedName: 'severity',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            context: {
                required: false,
                readOnly: true,
                serializedName: 'context',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ObjectElementType',
                        type: {
                            name: 'Dictionary',
                            value: {
                                required: false,
                                serializedName: 'stringElementType',
                                type: {
                                    name: 'String'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
export var ConnectivityHop = {
    required: false,
    serializedName: 'ConnectivityHop',
    type: {
        name: 'Composite',
        className: 'ConnectivityHop',
        modelProperties: {
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            id: {
                required: false,
                readOnly: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            address: {
                required: false,
                readOnly: true,
                serializedName: 'address',
                type: {
                    name: 'String'
                }
            },
            resourceId: {
                required: false,
                readOnly: true,
                serializedName: 'resourceId',
                type: {
                    name: 'String'
                }
            },
            nextHopIds: {
                required: false,
                readOnly: true,
                serializedName: 'nextHopIds',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            issues: {
                required: false,
                readOnly: true,
                serializedName: 'issues',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ConnectivityIssueElementType',
                        type: {
                            name: 'Composite',
                            className: 'ConnectivityIssue'
                        }
                    }
                }
            }
        }
    }
};
export var ConnectivityInformation = {
    required: false,
    serializedName: 'ConnectivityInformation',
    type: {
        name: 'Composite',
        className: 'ConnectivityInformation',
        modelProperties: {
            hops: {
                required: false,
                readOnly: true,
                serializedName: 'hops',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ConnectivityHopElementType',
                        type: {
                            name: 'Composite',
                            className: 'ConnectivityHop'
                        }
                    }
                }
            },
            connectionStatus: {
                required: false,
                readOnly: true,
                serializedName: 'connectionStatus',
                type: {
                    name: 'String'
                }
            },
            avgLatencyInMs: {
                required: false,
                readOnly: true,
                serializedName: 'avgLatencyInMs',
                type: {
                    name: 'Number'
                }
            },
            minLatencyInMs: {
                required: false,
                readOnly: true,
                serializedName: 'minLatencyInMs',
                type: {
                    name: 'Number'
                }
            },
            maxLatencyInMs: {
                required: false,
                readOnly: true,
                serializedName: 'maxLatencyInMs',
                type: {
                    name: 'Number'
                }
            },
            probesSent: {
                required: false,
                readOnly: true,
                serializedName: 'probesSent',
                type: {
                    name: 'Number'
                }
            },
            probesFailed: {
                required: false,
                readOnly: true,
                serializedName: 'probesFailed',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var PatchRouteFilterRule = {
    required: false,
    serializedName: 'PatchRouteFilterRule',
    type: {
        name: 'Composite',
        className: 'PatchRouteFilterRule',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            access: {
                required: true,
                serializedName: 'properties.access',
                type: {
                    name: 'String'
                }
            },
            routeFilterRuleType: {
                required: true,
                isConstant: true,
                serializedName: 'properties.routeFilterRuleType',
                defaultValue: 'Community',
                type: {
                    name: 'String'
                }
            },
            communities: {
                required: true,
                serializedName: 'properties.communities',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var PatchRouteFilter = {
    required: false,
    serializedName: 'PatchRouteFilter',
    type: {
        name: 'Composite',
        className: 'PatchRouteFilter',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            rules: {
                required: false,
                serializedName: 'properties.rules',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'RouteFilterRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'RouteFilterRule'
                        }
                    }
                }
            },
            peerings: {
                required: false,
                serializedName: 'properties.peerings',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitPeeringElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitPeering'
                        }
                    }
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                readOnly: true,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var BGPCommunity = {
    required: false,
    serializedName: 'BGPCommunity',
    type: {
        name: 'Composite',
        className: 'BGPCommunity',
        modelProperties: {
            serviceSupportedRegion: {
                required: false,
                serializedName: 'serviceSupportedRegion',
                type: {
                    name: 'String'
                }
            },
            communityName: {
                required: false,
                serializedName: 'communityName',
                type: {
                    name: 'String'
                }
            },
            communityValue: {
                required: false,
                serializedName: 'communityValue',
                type: {
                    name: 'String'
                }
            },
            communityPrefixes: {
                required: false,
                serializedName: 'communityPrefixes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            isAuthorizedToUse: {
                required: false,
                serializedName: 'isAuthorizedToUse',
                type: {
                    name: 'Boolean'
                }
            },
            serviceGroup: {
                required: false,
                serializedName: 'serviceGroup',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var BgpServiceCommunity = {
    required: false,
    serializedName: 'BgpServiceCommunity',
    type: {
        name: 'Composite',
        className: 'BgpServiceCommunity',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            serviceName: {
                required: false,
                serializedName: 'properties.serviceName',
                type: {
                    name: 'String'
                }
            },
            bgpCommunities: {
                required: false,
                serializedName: 'properties.bgpCommunities',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'BGPCommunityElementType',
                        type: {
                            name: 'Composite',
                            className: 'BGPCommunity'
                        }
                    }
                }
            }
        }
    }
};
export var UsageName = {
    required: false,
    serializedName: 'UsageName',
    type: {
        name: 'Composite',
        className: 'UsageName',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'String'
                }
            },
            localizedValue: {
                required: false,
                serializedName: 'localizedValue',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var Usage = {
    required: false,
    serializedName: 'Usage',
    type: {
        name: 'Composite',
        className: 'Usage',
        modelProperties: {
            id: {
                required: false,
                readOnly: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            unit: {
                required: true,
                isConstant: true,
                serializedName: 'unit',
                defaultValue: 'Count',
                type: {
                    name: 'String'
                }
            },
            currentValue: {
                required: true,
                serializedName: 'currentValue',
                type: {
                    name: 'Number'
                }
            },
            limit: {
                required: true,
                serializedName: 'limit',
                type: {
                    name: 'Number'
                }
            },
            name: {
                required: true,
                serializedName: 'name',
                type: {
                    name: 'Composite',
                    className: 'UsageName'
                }
            }
        }
    }
};
export var VirtualNetworkPeering = {
    required: false,
    serializedName: 'VirtualNetworkPeering',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkPeering',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            allowVirtualNetworkAccess: {
                required: false,
                serializedName: 'properties.allowVirtualNetworkAccess',
                type: {
                    name: 'Boolean'
                }
            },
            allowForwardedTraffic: {
                required: false,
                serializedName: 'properties.allowForwardedTraffic',
                type: {
                    name: 'Boolean'
                }
            },
            allowGatewayTransit: {
                required: false,
                serializedName: 'properties.allowGatewayTransit',
                type: {
                    name: 'Boolean'
                }
            },
            useRemoteGateways: {
                required: false,
                serializedName: 'properties.useRemoteGateways',
                type: {
                    name: 'Boolean'
                }
            },
            remoteVirtualNetwork: {
                required: false,
                serializedName: 'properties.remoteVirtualNetwork',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            peeringState: {
                required: false,
                serializedName: 'properties.peeringState',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var AddressSpace = {
    required: false,
    serializedName: 'AddressSpace',
    type: {
        name: 'Composite',
        className: 'AddressSpace',
        modelProperties: {
            addressPrefixes: {
                required: false,
                serializedName: 'addressPrefixes',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var DhcpOptions = {
    required: false,
    serializedName: 'DhcpOptions',
    type: {
        name: 'Composite',
        className: 'DhcpOptions',
        modelProperties: {
            dnsServers: {
                required: false,
                serializedName: 'dnsServers',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var VirtualNetwork = {
    required: false,
    serializedName: 'VirtualNetwork',
    type: {
        name: 'Composite',
        className: 'VirtualNetwork',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            addressSpace: {
                required: false,
                serializedName: 'properties.addressSpace',
                type: {
                    name: 'Composite',
                    className: 'AddressSpace'
                }
            },
            dhcpOptions: {
                required: false,
                serializedName: 'properties.dhcpOptions',
                type: {
                    name: 'Composite',
                    className: 'DhcpOptions'
                }
            },
            subnets: {
                required: false,
                serializedName: 'properties.subnets',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubnetElementType',
                        type: {
                            name: 'Composite',
                            className: 'Subnet'
                        }
                    }
                }
            },
            virtualNetworkPeerings: {
                required: false,
                serializedName: 'properties.virtualNetworkPeerings',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkPeeringElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetworkPeering'
                        }
                    }
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            enableDdosProtection: {
                required: false,
                serializedName: 'properties.enableDdosProtection',
                type: {
                    name: 'Boolean'
                }
            },
            enableVmProtection: {
                required: false,
                serializedName: 'properties.enableVmProtection',
                type: {
                    name: 'Boolean'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var IPAddressAvailabilityResult = {
    required: false,
    serializedName: 'IPAddressAvailabilityResult',
    type: {
        name: 'Composite',
        className: 'IPAddressAvailabilityResult',
        modelProperties: {
            available: {
                required: false,
                serializedName: 'available',
                type: {
                    name: 'Boolean'
                }
            },
            availableIPAddresses: {
                required: false,
                serializedName: 'availableIPAddresses',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var VirtualNetworkUsageName = {
    required: false,
    serializedName: 'VirtualNetworkUsageName',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkUsageName',
        modelProperties: {
            localizedValue: {
                required: false,
                readOnly: true,
                serializedName: 'localizedValue',
                type: {
                    name: 'String'
                }
            },
            value: {
                required: false,
                readOnly: true,
                serializedName: 'value',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkUsage = {
    required: false,
    serializedName: 'VirtualNetworkUsage',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkUsage',
        modelProperties: {
            currentValue: {
                required: false,
                readOnly: true,
                serializedName: 'currentValue',
                type: {
                    name: 'Number'
                }
            },
            id: {
                required: false,
                readOnly: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            limit: {
                required: false,
                readOnly: true,
                serializedName: 'limit',
                type: {
                    name: 'Number'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'Composite',
                    className: 'VirtualNetworkUsageName'
                }
            },
            unit: {
                required: false,
                readOnly: true,
                serializedName: 'unit',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewayIPConfiguration = {
    required: false,
    serializedName: 'VirtualNetworkGatewayIPConfiguration',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewayIPConfiguration',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            privateIPAllocationMethod: {
                required: false,
                serializedName: 'properties.privateIPAllocationMethod',
                type: {
                    name: 'String'
                }
            },
            subnet: {
                required: false,
                serializedName: 'properties.subnet',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            publicIPAddress: {
                required: false,
                serializedName: 'properties.publicIPAddress',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewaySku = {
    required: false,
    serializedName: 'VirtualNetworkGatewaySku',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewaySku',
        modelProperties: {
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            tier: {
                required: false,
                serializedName: 'tier',
                type: {
                    name: 'String'
                }
            },
            capacity: {
                required: false,
                serializedName: 'capacity',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var VpnClientRootCertificate = {
    required: false,
    serializedName: 'VpnClientRootCertificate',
    type: {
        name: 'Composite',
        className: 'VpnClientRootCertificate',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            publicCertData: {
                required: true,
                serializedName: 'properties.publicCertData',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VpnClientRevokedCertificate = {
    required: false,
    serializedName: 'VpnClientRevokedCertificate',
    type: {
        name: 'Composite',
        className: 'VpnClientRevokedCertificate',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            thumbprint: {
                required: false,
                serializedName: 'properties.thumbprint',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VpnClientConfiguration = {
    required: false,
    serializedName: 'VpnClientConfiguration',
    type: {
        name: 'Composite',
        className: 'VpnClientConfiguration',
        modelProperties: {
            vpnClientAddressPool: {
                required: false,
                serializedName: 'vpnClientAddressPool',
                type: {
                    name: 'Composite',
                    className: 'AddressSpace'
                }
            },
            vpnClientRootCertificates: {
                required: false,
                serializedName: 'vpnClientRootCertificates',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VpnClientRootCertificateElementType',
                        type: {
                            name: 'Composite',
                            className: 'VpnClientRootCertificate'
                        }
                    }
                }
            },
            vpnClientRevokedCertificates: {
                required: false,
                serializedName: 'vpnClientRevokedCertificates',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VpnClientRevokedCertificateElementType',
                        type: {
                            name: 'Composite',
                            className: 'VpnClientRevokedCertificate'
                        }
                    }
                }
            },
            vpnClientProtocols: {
                required: false,
                serializedName: 'vpnClientProtocols',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            radiusServerAddress: {
                required: false,
                serializedName: 'radiusServerAddress',
                type: {
                    name: 'String'
                }
            },
            radiusServerSecret: {
                required: false,
                serializedName: 'radiusServerSecret',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var BgpSettings = {
    required: false,
    serializedName: 'BgpSettings',
    type: {
        name: 'Composite',
        className: 'BgpSettings',
        modelProperties: {
            asn: {
                required: false,
                serializedName: 'asn',
                type: {
                    name: 'Number'
                }
            },
            bgpPeeringAddress: {
                required: false,
                serializedName: 'bgpPeeringAddress',
                type: {
                    name: 'String'
                }
            },
            peerWeight: {
                required: false,
                serializedName: 'peerWeight',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var BgpPeerStatus = {
    required: false,
    serializedName: 'BgpPeerStatus',
    type: {
        name: 'Composite',
        className: 'BgpPeerStatus',
        modelProperties: {
            localAddress: {
                required: false,
                readOnly: true,
                serializedName: 'localAddress',
                type: {
                    name: 'String'
                }
            },
            neighbor: {
                required: false,
                readOnly: true,
                serializedName: 'neighbor',
                type: {
                    name: 'String'
                }
            },
            asn: {
                required: false,
                readOnly: true,
                serializedName: 'asn',
                type: {
                    name: 'Number'
                }
            },
            state: {
                required: false,
                readOnly: true,
                serializedName: 'state',
                type: {
                    name: 'String'
                }
            },
            connectedDuration: {
                required: false,
                readOnly: true,
                serializedName: 'connectedDuration',
                type: {
                    name: 'String'
                }
            },
            routesReceived: {
                required: false,
                readOnly: true,
                serializedName: 'routesReceived',
                type: {
                    name: 'Number'
                }
            },
            messagesSent: {
                required: false,
                readOnly: true,
                serializedName: 'messagesSent',
                type: {
                    name: 'Number'
                }
            },
            messagesReceived: {
                required: false,
                readOnly: true,
                serializedName: 'messagesReceived',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var GatewayRoute = {
    required: false,
    serializedName: 'GatewayRoute',
    type: {
        name: 'Composite',
        className: 'GatewayRoute',
        modelProperties: {
            localAddress: {
                required: false,
                readOnly: true,
                serializedName: 'localAddress',
                type: {
                    name: 'String'
                }
            },
            network: {
                required: false,
                readOnly: true,
                serializedName: 'network',
                type: {
                    name: 'String'
                }
            },
            nextHop: {
                required: false,
                readOnly: true,
                serializedName: 'nextHop',
                type: {
                    name: 'String'
                }
            },
            sourcePeer: {
                required: false,
                readOnly: true,
                serializedName: 'sourcePeer',
                type: {
                    name: 'String'
                }
            },
            origin: {
                required: false,
                readOnly: true,
                serializedName: 'origin',
                type: {
                    name: 'String'
                }
            },
            asPath: {
                required: false,
                readOnly: true,
                serializedName: 'asPath',
                type: {
                    name: 'String'
                }
            },
            weight: {
                required: false,
                readOnly: true,
                serializedName: 'weight',
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var VirtualNetworkGateway = {
    required: false,
    serializedName: 'VirtualNetworkGateway',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGateway',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            ipConfigurations: {
                required: false,
                serializedName: 'properties.ipConfigurations',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkGatewayIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetworkGatewayIPConfiguration'
                        }
                    }
                }
            },
            gatewayType: {
                required: false,
                serializedName: 'properties.gatewayType',
                type: {
                    name: 'String'
                }
            },
            vpnType: {
                required: false,
                serializedName: 'properties.vpnType',
                type: {
                    name: 'String'
                }
            },
            enableBgp: {
                required: false,
                serializedName: 'properties.enableBgp',
                type: {
                    name: 'Boolean'
                }
            },
            activeActive: {
                required: false,
                serializedName: 'properties.activeActive',
                type: {
                    name: 'Boolean'
                }
            },
            gatewayDefaultSite: {
                required: false,
                serializedName: 'properties.gatewayDefaultSite',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            sku: {
                required: false,
                serializedName: 'properties.sku',
                type: {
                    name: 'Composite',
                    className: 'VirtualNetworkGatewaySku'
                }
            },
            vpnClientConfiguration: {
                required: false,
                serializedName: 'properties.vpnClientConfiguration',
                type: {
                    name: 'Composite',
                    className: 'VpnClientConfiguration'
                }
            },
            bgpSettings: {
                required: false,
                serializedName: 'properties.bgpSettings',
                type: {
                    name: 'Composite',
                    className: 'BgpSettings'
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VpnClientParameters = {
    required: false,
    serializedName: 'VpnClientParameters',
    type: {
        name: 'Composite',
        className: 'VpnClientParameters',
        modelProperties: {
            processorArchitecture: {
                required: false,
                serializedName: 'processorArchitecture',
                type: {
                    name: 'String'
                }
            },
            authenticationMethod: {
                required: false,
                serializedName: 'authenticationMethod',
                type: {
                    name: 'String'
                }
            },
            radiusServerAuthCertificate: {
                required: false,
                serializedName: 'radiusServerAuthCertificate',
                type: {
                    name: 'String'
                }
            },
            clientRootCertificates: {
                required: false,
                serializedName: 'clientRootCertificates',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            }
        }
    }
};
export var BgpPeerStatusListResult = {
    required: false,
    serializedName: 'BgpPeerStatusListResult',
    type: {
        name: 'Composite',
        className: 'BgpPeerStatusListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'BgpPeerStatusElementType',
                        type: {
                            name: 'Composite',
                            className: 'BgpPeerStatus'
                        }
                    }
                }
            }
        }
    }
};
export var GatewayRouteListResult = {
    required: false,
    serializedName: 'GatewayRouteListResult',
    type: {
        name: 'Composite',
        className: 'GatewayRouteListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: 'value',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'GatewayRouteElementType',
                        type: {
                            name: 'Composite',
                            className: 'GatewayRoute'
                        }
                    }
                }
            }
        }
    }
};
export var TunnelConnectionHealth = {
    required: false,
    serializedName: 'TunnelConnectionHealth',
    type: {
        name: 'Composite',
        className: 'TunnelConnectionHealth',
        modelProperties: {
            tunnel: {
                required: false,
                readOnly: true,
                serializedName: 'tunnel',
                type: {
                    name: 'String'
                }
            },
            connectionStatus: {
                required: false,
                readOnly: true,
                serializedName: 'connectionStatus',
                type: {
                    name: 'String'
                }
            },
            ingressBytesTransferred: {
                required: false,
                readOnly: true,
                serializedName: 'ingressBytesTransferred',
                type: {
                    name: 'Number'
                }
            },
            egressBytesTransferred: {
                required: false,
                readOnly: true,
                serializedName: 'egressBytesTransferred',
                type: {
                    name: 'Number'
                }
            },
            lastConnectionEstablishedUtcTime: {
                required: false,
                readOnly: true,
                serializedName: 'lastConnectionEstablishedUtcTime',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LocalNetworkGateway = {
    required: false,
    serializedName: 'LocalNetworkGateway',
    type: {
        name: 'Composite',
        className: 'LocalNetworkGateway',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            localNetworkAddressSpace: {
                required: false,
                serializedName: 'properties.localNetworkAddressSpace',
                type: {
                    name: 'Composite',
                    className: 'AddressSpace'
                }
            },
            gatewayIpAddress: {
                required: false,
                serializedName: 'properties.gatewayIpAddress',
                type: {
                    name: 'String'
                }
            },
            bgpSettings: {
                required: false,
                serializedName: 'properties.bgpSettings',
                type: {
                    name: 'Composite',
                    className: 'BgpSettings'
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var IpsecPolicy = {
    required: false,
    serializedName: 'IpsecPolicy',
    type: {
        name: 'Composite',
        className: 'IpsecPolicy',
        modelProperties: {
            saLifeTimeSeconds: {
                required: true,
                serializedName: 'saLifeTimeSeconds',
                type: {
                    name: 'Number'
                }
            },
            saDataSizeKilobytes: {
                required: true,
                serializedName: 'saDataSizeKilobytes',
                type: {
                    name: 'Number'
                }
            },
            ipsecEncryption: {
                required: true,
                serializedName: 'ipsecEncryption',
                type: {
                    name: 'String'
                }
            },
            ipsecIntegrity: {
                required: true,
                serializedName: 'ipsecIntegrity',
                type: {
                    name: 'String'
                }
            },
            ikeEncryption: {
                required: true,
                serializedName: 'ikeEncryption',
                type: {
                    name: 'String'
                }
            },
            ikeIntegrity: {
                required: true,
                serializedName: 'ikeIntegrity',
                type: {
                    name: 'String'
                }
            },
            dhGroup: {
                required: true,
                serializedName: 'dhGroup',
                type: {
                    name: 'String'
                }
            },
            pfsGroup: {
                required: true,
                serializedName: 'pfsGroup',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewayConnection = {
    required: false,
    serializedName: 'VirtualNetworkGatewayConnection',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewayConnection',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            authorizationKey: {
                required: false,
                serializedName: 'properties.authorizationKey',
                type: {
                    name: 'String'
                }
            },
            virtualNetworkGateway1: {
                required: true,
                serializedName: 'properties.virtualNetworkGateway1',
                type: {
                    name: 'Composite',
                    className: 'VirtualNetworkGateway'
                }
            },
            virtualNetworkGateway2: {
                required: false,
                serializedName: 'properties.virtualNetworkGateway2',
                type: {
                    name: 'Composite',
                    className: 'VirtualNetworkGateway'
                }
            },
            localNetworkGateway2: {
                required: false,
                serializedName: 'properties.localNetworkGateway2',
                type: {
                    name: 'Composite',
                    className: 'LocalNetworkGateway'
                }
            },
            connectionType: {
                required: true,
                serializedName: 'properties.connectionType',
                type: {
                    name: 'String'
                }
            },
            routingWeight: {
                required: false,
                serializedName: 'properties.routingWeight',
                type: {
                    name: 'Number'
                }
            },
            sharedKey: {
                required: false,
                serializedName: 'properties.sharedKey',
                type: {
                    name: 'String'
                }
            },
            connectionStatus: {
                required: false,
                readOnly: true,
                serializedName: 'properties.connectionStatus',
                type: {
                    name: 'String'
                }
            },
            tunnelConnectionStatus: {
                required: false,
                readOnly: true,
                serializedName: 'properties.tunnelConnectionStatus',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'TunnelConnectionHealthElementType',
                        type: {
                            name: 'Composite',
                            className: 'TunnelConnectionHealth'
                        }
                    }
                }
            },
            egressBytesTransferred: {
                required: false,
                readOnly: true,
                serializedName: 'properties.egressBytesTransferred',
                type: {
                    name: 'Number'
                }
            },
            ingressBytesTransferred: {
                required: false,
                readOnly: true,
                serializedName: 'properties.ingressBytesTransferred',
                type: {
                    name: 'Number'
                }
            },
            peer: {
                required: false,
                serializedName: 'properties.peer',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            enableBgp: {
                required: false,
                serializedName: 'properties.enableBgp',
                type: {
                    name: 'Boolean'
                }
            },
            usePolicyBasedTrafficSelectors: {
                required: false,
                serializedName: 'properties.usePolicyBasedTrafficSelectors',
                type: {
                    name: 'Boolean'
                }
            },
            ipsecPolicies: {
                required: false,
                serializedName: 'properties.ipsecPolicies',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'IpsecPolicyElementType',
                        type: {
                            name: 'Composite',
                            className: 'IpsecPolicy'
                        }
                    }
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ConnectionResetSharedKey = {
    required: false,
    serializedName: 'ConnectionResetSharedKey',
    type: {
        name: 'Composite',
        className: 'ConnectionResetSharedKey',
        modelProperties: {
            keyLength: {
                required: true,
                serializedName: 'keyLength',
                constraints: {
                    InclusiveMaximum: 128,
                    InclusiveMinimum: 1
                },
                type: {
                    name: 'Number'
                }
            }
        }
    }
};
export var ConnectionSharedKey = {
    required: false,
    serializedName: 'ConnectionSharedKey',
    type: {
        name: 'Composite',
        className: 'ConnectionSharedKey',
        modelProperties: {
            value: {
                required: true,
                serializedName: 'value',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkConnectionGatewayReference = {
    required: false,
    serializedName: 'virtualNetworkConnectionGatewayReference',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkConnectionGatewayReference',
        modelProperties: {
            id: {
                required: true,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewayConnectionListEntity = {
    required: false,
    serializedName: 'VirtualNetworkGatewayConnectionListEntity',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewayConnectionListEntity',
        modelProperties: {
            id: {
                required: false,
                serializedName: 'id',
                type: {
                    name: 'String'
                }
            },
            name: {
                required: false,
                readOnly: true,
                serializedName: 'name',
                type: {
                    name: 'String'
                }
            },
            type: {
                required: false,
                readOnly: true,
                serializedName: 'type',
                type: {
                    name: 'String'
                }
            },
            location: {
                required: false,
                serializedName: 'location',
                type: {
                    name: 'String'
                }
            },
            tags: {
                required: false,
                serializedName: 'tags',
                type: {
                    name: 'Dictionary',
                    value: {
                        required: false,
                        serializedName: 'stringElementType',
                        type: {
                            name: 'String'
                        }
                    }
                }
            },
            authorizationKey: {
                required: false,
                serializedName: 'properties.authorizationKey',
                type: {
                    name: 'String'
                }
            },
            virtualNetworkGateway1: {
                required: true,
                serializedName: 'properties.virtualNetworkGateway1',
                type: {
                    name: 'Composite',
                    className: 'VirtualNetworkConnectionGatewayReference'
                }
            },
            virtualNetworkGateway2: {
                required: false,
                serializedName: 'properties.virtualNetworkGateway2',
                type: {
                    name: 'Composite',
                    className: 'VirtualNetworkConnectionGatewayReference'
                }
            },
            localNetworkGateway2: {
                required: false,
                serializedName: 'properties.localNetworkGateway2',
                type: {
                    name: 'Composite',
                    className: 'VirtualNetworkConnectionGatewayReference'
                }
            },
            connectionType: {
                required: true,
                serializedName: 'properties.connectionType',
                type: {
                    name: 'String'
                }
            },
            routingWeight: {
                required: false,
                serializedName: 'properties.routingWeight',
                type: {
                    name: 'Number'
                }
            },
            sharedKey: {
                required: false,
                serializedName: 'properties.sharedKey',
                type: {
                    name: 'String'
                }
            },
            connectionStatus: {
                required: false,
                readOnly: true,
                serializedName: 'properties.connectionStatus',
                type: {
                    name: 'String'
                }
            },
            tunnelConnectionStatus: {
                required: false,
                readOnly: true,
                serializedName: 'properties.tunnelConnectionStatus',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'TunnelConnectionHealthElementType',
                        type: {
                            name: 'Composite',
                            className: 'TunnelConnectionHealth'
                        }
                    }
                }
            },
            egressBytesTransferred: {
                required: false,
                readOnly: true,
                serializedName: 'properties.egressBytesTransferred',
                type: {
                    name: 'Number'
                }
            },
            ingressBytesTransferred: {
                required: false,
                readOnly: true,
                serializedName: 'properties.ingressBytesTransferred',
                type: {
                    name: 'Number'
                }
            },
            peer: {
                required: false,
                serializedName: 'properties.peer',
                type: {
                    name: 'Composite',
                    className: 'SubResource'
                }
            },
            enableBgp: {
                required: false,
                serializedName: 'properties.enableBgp',
                type: {
                    name: 'Boolean'
                }
            },
            usePolicyBasedTrafficSelectors: {
                required: false,
                serializedName: 'properties.usePolicyBasedTrafficSelectors',
                type: {
                    name: 'Boolean'
                }
            },
            ipsecPolicies: {
                required: false,
                serializedName: 'properties.ipsecPolicies',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'IpsecPolicyElementType',
                        type: {
                            name: 'Composite',
                            className: 'IpsecPolicy'
                        }
                    }
                }
            },
            resourceGuid: {
                required: false,
                serializedName: 'properties.resourceGuid',
                type: {
                    name: 'String'
                }
            },
            provisioningState: {
                required: false,
                readOnly: true,
                serializedName: 'properties.provisioningState',
                type: {
                    name: 'String'
                }
            },
            etag: {
                required: false,
                serializedName: 'etag',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewaysBackendHealthOptionalParams = {
    required: false,
    serializedName: 'BackendHealthOptions',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewaysBackendHealthOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewaysBeginBackendHealthOptionalParams = {
    required: false,
    serializedName: 'BeginBackendHealthOptions',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewaysBeginBackendHealthOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancersGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'LoadBalancersGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var InboundNatRulesGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'InboundNatRulesGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfacesGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'NetworkInterfacesGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams = {
    required: false,
    serializedName: 'GetVirtualMachineScaleSetNetworkInterfaceOptions',
    type: {
        name: 'Composite',
        className: 'NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkSecurityGroupsGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'NetworkSecurityGroupsGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PublicIPAddressesGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'PublicIPAddressesGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressOptionalParams = {
    required: false,
    serializedName: 'GetVirtualMachineScaleSetPublicIPAddressOptions',
    type: {
        name: 'Composite',
        className: 'PublicIPAddressesGetVirtualMachineScaleSetPublicIPAddressOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteFiltersGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'RouteFiltersGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteTablesGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'RouteTablesGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworksGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'VirtualNetworksGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworksCheckIPAddressAvailabilityOptionalParams = {
    required: false,
    serializedName: 'CheckIPAddressAvailabilityOptions',
    type: {
        name: 'Composite',
        className: 'VirtualNetworksCheckIPAddressAvailabilityOptionalParams',
        modelProperties: {
            ipAddress: {
                required: false,
                serializedName: 'ipAddress',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var SubnetsGetOptionalParams = {
    required: false,
    serializedName: 'GetOptions',
    type: {
        name: 'Composite',
        className: 'SubnetsGetOptionalParams',
        modelProperties: {
            expand: {
                required: false,
                serializedName: '$expand',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewaysResetOptionalParams = {
    required: false,
    serializedName: 'ResetOptions',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewaysResetOptionalParams',
        modelProperties: {
            gatewayVip: {
                required: false,
                serializedName: 'gatewayVip',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewaysGetBgpPeerStatusOptionalParams = {
    required: false,
    serializedName: 'GetBgpPeerStatusOptions',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewaysGetBgpPeerStatusOptionalParams',
        modelProperties: {
            peer: {
                required: false,
                serializedName: 'peer',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewaysBeginResetOptionalParams = {
    required: false,
    serializedName: 'BeginResetOptions',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewaysBeginResetOptionalParams',
        modelProperties: {
            gatewayVip: {
                required: false,
                serializedName: 'gatewayVip',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewaysBeginGetBgpPeerStatusOptionalParams = {
    required: false,
    serializedName: 'BeginGetBgpPeerStatusOptions',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewaysBeginGetBgpPeerStatusOptionalParams',
        modelProperties: {
            peer: {
                required: false,
                serializedName: 'peer',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayListResult = {
    required: false,
    serializedName: 'ApplicationGatewayListResult',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewayElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGateway'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationGatewayAvailableSslPredefinedPolicies = {
    required: false,
    serializedName: 'ApplicationGatewayAvailableSslPredefinedPolicies',
    type: {
        name: 'Composite',
        className: 'ApplicationGatewayAvailableSslPredefinedPolicies',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationGatewaySslPredefinedPolicyElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationGatewaySslPredefinedPolicy'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ApplicationSecurityGroupListResult = {
    required: false,
    serializedName: 'ApplicationSecurityGroupListResult',
    type: {
        name: 'Composite',
        className: 'ApplicationSecurityGroupListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ApplicationSecurityGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'ApplicationSecurityGroup'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var EndpointServicesListResult = {
    required: false,
    serializedName: 'EndpointServicesListResult',
    type: {
        name: 'Composite',
        className: 'EndpointServicesListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'EndpointServiceResultElementType',
                        type: {
                            name: 'Composite',
                            className: 'EndpointServiceResult'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var AuthorizationListResult = {
    required: false,
    serializedName: 'AuthorizationListResult',
    type: {
        name: 'Composite',
        className: 'AuthorizationListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitAuthorizationElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitAuthorization'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitPeeringListResult = {
    required: false,
    serializedName: 'ExpressRouteCircuitPeeringListResult',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitPeeringListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitPeeringElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuitPeering'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteCircuitListResult = {
    required: false,
    serializedName: 'ExpressRouteCircuitListResult',
    type: {
        name: 'Composite',
        className: 'ExpressRouteCircuitListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteCircuitElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteCircuit'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var ExpressRouteServiceProviderListResult = {
    required: false,
    serializedName: 'ExpressRouteServiceProviderListResult',
    type: {
        name: 'Composite',
        className: 'ExpressRouteServiceProviderListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ExpressRouteServiceProviderElementType',
                        type: {
                            name: 'Composite',
                            className: 'ExpressRouteServiceProvider'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancerListResult = {
    required: false,
    serializedName: 'LoadBalancerListResult',
    type: {
        name: 'Composite',
        className: 'LoadBalancerListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'LoadBalancerElementType',
                        type: {
                            name: 'Composite',
                            className: 'LoadBalancer'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancerBackendAddressPoolListResult = {
    required: false,
    serializedName: 'LoadBalancerBackendAddressPoolListResult',
    type: {
        name: 'Composite',
        className: 'LoadBalancerBackendAddressPoolListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'BackendAddressPoolElementType',
                        type: {
                            name: 'Composite',
                            className: 'BackendAddressPool'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancerFrontendIPConfigurationListResult = {
    required: false,
    serializedName: 'LoadBalancerFrontendIPConfigurationListResult',
    type: {
        name: 'Composite',
        className: 'LoadBalancerFrontendIPConfigurationListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'FrontendIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'FrontendIPConfiguration'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var InboundNatRuleListResult = {
    required: false,
    serializedName: 'InboundNatRuleListResult',
    type: {
        name: 'Composite',
        className: 'InboundNatRuleListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'InboundNatRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'InboundNatRule'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancerLoadBalancingRuleListResult = {
    required: false,
    serializedName: 'LoadBalancerLoadBalancingRuleListResult',
    type: {
        name: 'Composite',
        className: 'LoadBalancerLoadBalancingRuleListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'LoadBalancingRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'LoadBalancingRule'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfaceListResult = {
    required: false,
    serializedName: 'NetworkInterfaceListResult',
    type: {
        name: 'Composite',
        className: 'NetworkInterfaceListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkInterfaceElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkInterface'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LoadBalancerProbeListResult = {
    required: false,
    serializedName: 'LoadBalancerProbeListResult',
    type: {
        name: 'Composite',
        className: 'LoadBalancerProbeListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'ProbeElementType',
                        type: {
                            name: 'Composite',
                            className: 'Probe'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfaceIPConfigurationListResult = {
    required: false,
    serializedName: 'NetworkInterfaceIPConfigurationListResult',
    type: {
        name: 'Composite',
        className: 'NetworkInterfaceIPConfigurationListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkInterfaceIPConfigurationElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkInterfaceIPConfiguration'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkInterfaceLoadBalancerListResult = {
    required: false,
    serializedName: 'NetworkInterfaceLoadBalancerListResult',
    type: {
        name: 'Composite',
        className: 'NetworkInterfaceLoadBalancerListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'LoadBalancerElementType',
                        type: {
                            name: 'Composite',
                            className: 'LoadBalancer'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkSecurityGroupListResult = {
    required: false,
    serializedName: 'NetworkSecurityGroupListResult',
    type: {
        name: 'Composite',
        className: 'NetworkSecurityGroupListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkSecurityGroupElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkSecurityGroup'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var SecurityRuleListResult = {
    required: false,
    serializedName: 'SecurityRuleListResult',
    type: {
        name: 'Composite',
        className: 'SecurityRuleListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SecurityRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'SecurityRule'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var NetworkWatcherListResult = {
    required: false,
    serializedName: 'NetworkWatcherListResult',
    type: {
        name: 'Composite',
        className: 'NetworkWatcherListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'NetworkWatcherElementType',
                        type: {
                            name: 'Composite',
                            className: 'NetworkWatcher'
                        }
                    }
                }
            }
        }
    }
};
export var PacketCaptureListResult = {
    required: false,
    serializedName: 'PacketCaptureListResult',
    type: {
        name: 'Composite',
        className: 'PacketCaptureListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'PacketCaptureResultElementType',
                        type: {
                            name: 'Composite',
                            className: 'PacketCaptureResult'
                        }
                    }
                }
            }
        }
    }
};
export var PublicIPAddressListResult = {
    required: false,
    serializedName: 'PublicIPAddressListResult',
    type: {
        name: 'Composite',
        className: 'PublicIPAddressListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'PublicIPAddressElementType',
                        type: {
                            name: 'Composite',
                            className: 'PublicIPAddress'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteFilterListResult = {
    required: false,
    serializedName: 'RouteFilterListResult',
    type: {
        name: 'Composite',
        className: 'RouteFilterListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'RouteFilterElementType',
                        type: {
                            name: 'Composite',
                            className: 'RouteFilter'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteFilterRuleListResult = {
    required: false,
    serializedName: 'RouteFilterRuleListResult',
    type: {
        name: 'Composite',
        className: 'RouteFilterRuleListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'RouteFilterRuleElementType',
                        type: {
                            name: 'Composite',
                            className: 'RouteFilterRule'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteTableListResult = {
    required: false,
    serializedName: 'RouteTableListResult',
    type: {
        name: 'Composite',
        className: 'RouteTableListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'RouteTableElementType',
                        type: {
                            name: 'Composite',
                            className: 'RouteTable'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var RouteListResult = {
    required: false,
    serializedName: 'RouteListResult',
    type: {
        name: 'Composite',
        className: 'RouteListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'RouteElementType',
                        type: {
                            name: 'Composite',
                            className: 'Route'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var BgpServiceCommunityListResult = {
    required: false,
    serializedName: 'BgpServiceCommunityListResult',
    type: {
        name: 'Composite',
        className: 'BgpServiceCommunityListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'BgpServiceCommunityElementType',
                        type: {
                            name: 'Composite',
                            className: 'BgpServiceCommunity'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var UsagesListResult = {
    required: false,
    serializedName: 'UsagesListResult',
    type: {
        name: 'Composite',
        className: 'UsagesListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'UsageElementType',
                        type: {
                            name: 'Composite',
                            className: 'Usage'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkListResult = {
    required: false,
    serializedName: 'VirtualNetworkListResult',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetwork'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkListUsageResult = {
    required: false,
    serializedName: 'VirtualNetworkListUsageResult',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkListUsageResult',
        modelProperties: {
            value: {
                required: false,
                readOnly: true,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkUsageElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetworkUsage'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var SubnetListResult = {
    required: false,
    serializedName: 'SubnetListResult',
    type: {
        name: 'Composite',
        className: 'SubnetListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'SubnetElementType',
                        type: {
                            name: 'Composite',
                            className: 'Subnet'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkPeeringListResult = {
    required: false,
    serializedName: 'VirtualNetworkPeeringListResult',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkPeeringListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkPeeringElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetworkPeering'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewayListResult = {
    required: false,
    serializedName: 'VirtualNetworkGatewayListResult',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewayListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkGatewayElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetworkGateway'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewayListConnectionsResult = {
    required: false,
    serializedName: 'VirtualNetworkGatewayListConnectionsResult',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewayListConnectionsResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkGatewayConnectionListEntityElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetworkGatewayConnectionListEntity'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var VirtualNetworkGatewayConnectionListResult = {
    required: false,
    serializedName: 'VirtualNetworkGatewayConnectionListResult',
    type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewayConnectionListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'VirtualNetworkGatewayConnectionElementType',
                        type: {
                            name: 'Composite',
                            className: 'VirtualNetworkGatewayConnection'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
export var LocalNetworkGatewayListResult = {
    required: false,
    serializedName: 'LocalNetworkGatewayListResult',
    type: {
        name: 'Composite',
        className: 'LocalNetworkGatewayListResult',
        modelProperties: {
            value: {
                required: false,
                serializedName: '',
                type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'LocalNetworkGatewayElementType',
                        type: {
                            name: 'Composite',
                            className: 'LocalNetworkGateway'
                        }
                    }
                }
            },
            nextLink: {
                required: false,
                readOnly: true,
                serializedName: 'nextLink',
                type: {
                    name: 'String'
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map